//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/com/goodow/realtime/channel/PollChannel.java
//
//  Created by retechretech on 13-5-25.
//

#import "IOSClass.h"
#import "com/goodow/realtime/channel/PollChannel.h"
#import "com/goodow/realtime/channel/RealtimeChannelDemuxer.h"
#import "com/goodow/realtime/channel/rpc/PollService.h"
#import "com/goodow/realtime/util/ModelFactory.h"
#import "com/goodow/realtime/util/ModelNative.h"
#import "elemental/json/Json.h"
#import "elemental/json/JsonArray.h"
#import "elemental/util/ArrayOfString.h"
#import "java/lang/Runnable.h"
#import "java/util/logging/Level.h"
#import "java/util/logging/Logger.h"

@implementation ComGoodowRealtimeChannelPollChannel

static JavaUtilLoggingLogger * ComGoodowRealtimeChannelPollChannel_log_;
static ComGoodowRealtimeChannelPollChannel * ComGoodowRealtimeChannelPollChannel_INSTANCE_;

@synthesize demuxer = demuxer_;
@synthesize isHeartbeatTaskCanceled = isHeartbeatTaskCanceled_;
@synthesize heartbeatTask = heartbeatTask_;
@synthesize service = service_;
@synthesize sessionId = sessionId_;

+ (JavaUtilLoggingLogger *)log {
  return ComGoodowRealtimeChannelPollChannel_log_;
}

+ (ComGoodowRealtimeChannelPollChannel *)INSTANCE {
  return ComGoodowRealtimeChannelPollChannel_INSTANCE_;
}

+ (ComGoodowRealtimeChannelPollChannel *)get {
  return ComGoodowRealtimeChannelPollChannel_INSTANCE_;
}

- (id)init {
  if ((self = [super init])) {
    demuxer_ = [ComGoodowRealtimeChannelRealtimeChannelDemuxer get];
    isHeartbeatTaskCanceled_ = YES;
    heartbeatTask_ = [[ComGoodowRealtimeChannelPollChannel_$1 alloc] initWithComGoodowRealtimeChannelPollChannel:self];
    self.service = [[ComGoodowRealtimeChannelRpcPollService alloc] init];
  }
  return self;
}

- (void)close {
  isHeartbeatTaskCanceled_ = YES;
}

- (void)connectWithNSString:(NSString *)sessionId {
  self.sessionId = sessionId;
  if (!isHeartbeatTaskCanceled_) {
    return;
  }
  isHeartbeatTaskCanceled_ = NO;
  [((id<JavaLangRunnable>) NIL_CHK(heartbeatTask_)) run];
}

+ (void)initialize {
  if (self == [ComGoodowRealtimeChannelPollChannel class]) {
    ComGoodowRealtimeChannelPollChannel_log_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[ComGoodowRealtimeChannelPollChannel class]] getName]];
    ComGoodowRealtimeChannelPollChannel_INSTANCE_ = [[ComGoodowRealtimeChannelPollChannel alloc] init];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComGoodowRealtimeChannelPollChannel *typedCopy = (ComGoodowRealtimeChannelPollChannel *) copy;
  typedCopy.demuxer = demuxer_;
  typedCopy.isHeartbeatTaskCanceled = isHeartbeatTaskCanceled_;
  typedCopy.heartbeatTask = heartbeatTask_;
  typedCopy.service = service_;
  typedCopy.sessionId = sessionId_;
}

@end
@implementation ComGoodowRealtimeChannelPollChannel_$1

@synthesize this$0 = this$0_;

- (void)run {
  if (this$0_.isHeartbeatTaskCanceled) {
    return;
  }
  id<ElementalUtilArrayOfString> ids = [((ComGoodowRealtimeChannelRealtimeChannelDemuxer *) NIL_CHK(this$0_.demuxer)) getIds];
  id<EMJsonArray> array = [EMJson createArray];
  if ([((id<ElementalUtilArrayOfString>) NIL_CHK(ids)) length] != 0) {
    for (int i = 0, len = [((id<ElementalUtilArrayOfString>) NIL_CHK(ids)) length]; i < len; i++) {
      id<EMJsonArray> req = [EMJson createArray];
      NSString *id_ = [((id<ElementalUtilArrayOfString>) NIL_CHK(ids)) getWithInt:i];
      [((id<EMJsonArray>) NIL_CHK(req)) setWithInt:0 withNSString:id_];
      [((id<EMJsonArray>) NIL_CHK(req)) setWithInt:1 withDouble:[((ComGoodowRealtimeChannelRealtimeChannelDemuxer *) NIL_CHK(this$0_.demuxer)) getRevisionWithNSString:id_] + 1];
      [((id<EMJsonArray>) NIL_CHK(array)) setWithInt:i withEMJsonValue:req];
    }
    [((JavaUtilLoggingLogger *) NIL_CHK([ComGoodowRealtimeChannelPollChannel log])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel FINE] withNSString:@"Heartbeat"];
  }
  [((ComGoodowRealtimeChannelRpcPollService *) NIL_CHK(this$0_.service)) pollWithEMJsonArray:array withNSString:this$0_.sessionId];
  [((id<ComGoodowRealtimeUtilModelFactory>) [ComGoodowRealtimeUtilModelNative get]) scheduleFixedDelayWithJavaLangRunnable:this$0_.heartbeatTask withInt:ComGoodowRealtimeChannelPollChannel_HEARTBEAT_INTERVAL_MILLIS];
}

- (id)initWithComGoodowRealtimeChannelPollChannel:(ComGoodowRealtimeChannelPollChannel *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComGoodowRealtimeChannelPollChannel_$1 *typedCopy = (ComGoodowRealtimeChannelPollChannel_$1 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
