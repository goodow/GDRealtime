//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/com/goodow/realtime/channel/rpc/PollService.java
//
//  Created by retechretech on 13-5-25.
//

#import "IOSClass.h"
#import "com/goodow/realtime/Realtime.h"
#import "com/goodow/realtime/channel/RealtimeChannelDemuxer.h"
#import "com/goodow/realtime/channel/rpc/Constants.h"
#import "com/goodow/realtime/channel/rpc/DeltaService.h"
#import "com/goodow/realtime/channel/rpc/PollService.h"
#import "com/goodow/realtime/channel/rpc/Rpc.h"
#import "com/goodow/realtime/channel/rpc/RpcUtil.h"
#import "elemental/json/Json.h"
#import "elemental/json/JsonArray.h"
#import "elemental/json/JsonObject.h"
#import "elemental/util/Collections.h"
#import "elemental/util/MapFromStringToString.h"
#import "java/lang/Throwable.h"
#import "java/util/logging/Level.h"
#import "java/util/logging/Logger.h"

@implementation ComGoodowRealtimeChannelRpcPollService

static JavaUtilLoggingLogger * ComGoodowRealtimeChannelRpcPollService_log_;
static ComGoodowRealtimeChannelRealtimeChannelDemuxer * ComGoodowRealtimeChannelRpcPollService_demuxer_;

+ (JavaUtilLoggingLogger *)log {
  return ComGoodowRealtimeChannelRpcPollService_log_;
}

+ (ComGoodowRealtimeChannelRealtimeChannelDemuxer *)demuxer {
  return ComGoodowRealtimeChannelRpcPollService_demuxer_;
}

- (void)pollWithEMJsonArray:(id<EMJsonArray>)ids
               withNSString:(NSString *)sessionId {
  id<ElementalUtilMapFromStringToString> params = [ElementalUtilCollections mapFromStringToString];
  [((id<ElementalUtilMapFromStringToString>) NIL_CHK(params)) putWithNSString:[ComGoodowRealtimeChannelRpcConstants_Params ACCESS_TOKEN] withNSString:[GDRRealtime getToken]];
  [((id<ElementalUtilMapFromStringToString>) NIL_CHK(params)) putWithNSString:[ComGoodowRealtimeChannelRpcConstants_Params SESSION_ID] withNSString:sessionId];
  id<EMJsonObject> obj = [EMJson createObject];
  [((id<EMJsonObject>) NIL_CHK(obj)) putWithNSString:[ComGoodowRealtimeChannelRpcConstants_Params IDS] withEMJsonValue:ids];
  [((id<ComGoodowRealtimeChannelRpcRpc>) [((ComGoodowRealtimeChannelRealtimeChannelDemuxer *) NIL_CHK(ComGoodowRealtimeChannelRpcPollService_demuxer_)) getRpc]) postWithNSString:[ComGoodowRealtimeChannelRpcConstants_Services POLL] withElementalUtilMapFromStringToString:params withNSString:[((id<EMJsonObject>) NIL_CHK(obj)) toJson] withComGoodowRealtimeChannelRpcRpc_RpcCallback:[[ComGoodowRealtimeChannelRpcPollService_$1 alloc] init]];
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComGoodowRealtimeChannelRpcPollService class]) {
    ComGoodowRealtimeChannelRpcPollService_log_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[ComGoodowRealtimeChannelRpcDeltaService class]] getName]];
    ComGoodowRealtimeChannelRpcPollService_demuxer_ = [ComGoodowRealtimeChannelRealtimeChannelDemuxer get];
  }
}

@end
@implementation ComGoodowRealtimeChannelRpcPollService_$1

- (void)onConnectionErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  [((JavaUtilLoggingLogger *) NIL_CHK([ComGoodowRealtimeChannelRpcPollService log])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"onConnectionError " withJavaLangThrowable:e];
}

- (void)onFatalErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  [((JavaUtilLoggingLogger *) NIL_CHK([ComGoodowRealtimeChannelRpcPollService log])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"onFatalError " withJavaLangThrowable:e];
}

- (void)onSuccessWithNSString:(NSString *)data {
  id<EMJsonArray> msgs = ((id<EMJsonArray>) [ComGoodowRealtimeChannelRpcRpcUtil evalPrefixedWithNSString:data]);
  for (int i = 0, len = [((id<EMJsonArray>) NIL_CHK(msgs)) length]; i < len; i++) {
    id<EMJsonObject> msg = [((id<EMJsonArray>) NIL_CHK(msgs)) getObjectWithInt:i];
    if ([NIL_CHK([ComGoodowRealtimeChannelRpcConstants_Params TOKEN]) isEqual:[((id<EMJsonObject>) NIL_CHK(msg)) getStringWithNSString:[ComGoodowRealtimeChannelRpcConstants_Params ID]]]) {
      [((ComGoodowRealtimeChannelRealtimeChannelDemuxer *) NIL_CHK([ComGoodowRealtimeChannelRpcPollService demuxer])) connectWithNSString:[((id<EMJsonObject>) NIL_CHK(msg)) getStringWithNSString:[ComGoodowRealtimeChannelRpcConstants_Params TOKEN]]];
      continue;
    }
    [((ComGoodowRealtimeChannelRealtimeChannelDemuxer *) NIL_CHK([ComGoodowRealtimeChannelRpcPollService demuxer])) publishMessageWithEMJsonObject:msg];
  }
}

- (id)init {
  return [super init];
}

@end
