//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "com/goodow/realtime/channel/ChannelDemuxer.h"
#include "com/goodow/realtime/channel/PollChannel.h"
#include "com/goodow/realtime/channel/operation/GenericOperationChannel.h"
#include "com/goodow/realtime/channel/operation/OperationSucker.h"
#include "com/goodow/realtime/channel/operation/ReceiveOpChannelImpl.h"
#include "com/goodow/realtime/channel/rpc/Rpc.h"
#include "com/goodow/realtime/channel/rpc/SaveService.h"
#include "com/goodow/realtime/channel/rpc/SnapshotService.h"
#include "com/goodow/realtime/operation/RealtimeOperation.h"
#include "com/goodow/realtime/operation/Transformer.h"
#include "com/goodow/realtime/operation/TransformerImpl.h"
#include "elemental/json/JsonObject.h"
#include "elemental/json/JsonValue.h"
#include "java/lang/Throwable.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"

@implementation ComGoodowRealtimeChannelOperationOperationSucker

static JavaUtilLoggingLogger * ComGoodowRealtimeChannelOperationOperationSucker_logger_;
static ComGoodowRealtimeChannelChannelDemuxer * ComGoodowRealtimeChannelOperationOperationSucker_demuxer_;

+ (JavaUtilLoggingLogger *)logger {
  return ComGoodowRealtimeChannelOperationOperationSucker_logger_;
}

+ (ComGoodowRealtimeChannelChannelDemuxer *)demuxer {
  return ComGoodowRealtimeChannelOperationOperationSucker_demuxer_;
}

- (id)initWithNSString:(NSString *)id_ {
  if (self = [super init]) {
    sessionId_ = [ComGoodowRealtimeChannelChannelDemuxer getSessionId];
    self->id__ = id_;
    self->rpc_ = [((ComGoodowRealtimeChannelChannelDemuxer *) nil_chk(ComGoodowRealtimeChannelOperationOperationSucker_demuxer_)) getRpc];
    transformer_ = [[ComGoodowRealtimeOperationTransformerImpl alloc] init];
    receiveChannel_ = [[ComGoodowRealtimeChannelOperationReceiveOpChannelImpl alloc] initWithNSString:id_ withComGoodowRealtimeChannelRpcRpc:rpc_ withComGoodowRealtimeOperationTransformer:transformer_];
    ComGoodowRealtimeChannelRpcSaveService *saveService = [[ComGoodowRealtimeChannelRpcSaveService alloc] initWithComGoodowRealtimeChannelRpcRpc:rpc_];
    channel_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel alloc] initWithNSString:id_ withComGoodowRealtimeOperationTransformer:transformer_ withComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel:receiveChannel_ withComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService:saveService withComGoodowRealtimeChannelOperationGenericOperationChannel_Listener:self];
    outputSink_ = [[ComGoodowRealtimeChannelOperationOperationSucker_$1 alloc] initWithComGoodowRealtimeChannelOperationOperationSucker:self withNSString:id_];
  }
  return self;
}

- (id<ComGoodowRealtimeChannelOperationOperationSucker_OutputSink>)getOutputSink {
  return outputSink_;
}

- (void)load__WithComGoodowRealtimeChannelOperationOperationSucker_Listener:(id<ComGoodowRealtimeChannelOperationOperationSucker_Listener>)listener
                    withComGoodowRealtimeChannelRpcSnapshotService_Callback:(id<ComGoodowRealtimeChannelRpcSnapshotService_Callback>)callback {
  ComGoodowRealtimeChannelRpcSnapshotService *snapshotService = [[ComGoodowRealtimeChannelRpcSnapshotService alloc] initWithComGoodowRealtimeChannelRpcRpc:rpc_];
  [snapshotService load__WithNSString:id__ withNSString:[((ComGoodowRealtimeChannelChannelDemuxer *) nil_chk(ComGoodowRealtimeChannelOperationOperationSucker_demuxer_)) getAccessToken] withNSString:sessionId_ withBoolean:YES withComGoodowRealtimeChannelRpcSnapshotService_Callback:[[ComGoodowRealtimeChannelOperationOperationSucker_$2 alloc] initWithComGoodowRealtimeChannelOperationOperationSucker:self withComGoodowRealtimeChannelOperationOperationSucker_Listener:listener withComGoodowRealtimeChannelRpcSnapshotService_Callback:callback]];
}

- (void)onAckWithId:(ComGoodowRealtimeOperationRealtimeOperation *)serverHistoryOp
        withBoolean:(BOOL)clean {
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  [((JavaUtilLoggingLogger *) nil_chk(ComGoodowRealtimeChannelOperationOperationSucker_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"Channel error occurs" withJavaLangThrowable:e];
  [((id<ComGoodowRealtimeChannelOperationOperationSucker_Listener>) nil_chk(bridge_)) handleErrorWithNSString:@"SERVER_ERROR" withNSString:@"Channel error occurs" withBoolean:YES];
}

- (void)onRemoteOpWithId:(ComGoodowRealtimeOperationRealtimeOperation *)serverHistoryOp {
  while ([((ComGoodowRealtimeChannelOperationGenericOperationChannel *) nil_chk(channel_)) peek] != nil) {
    [((id<ComGoodowRealtimeChannelOperationOperationSucker_Listener>) nil_chk(bridge_)) consumeWithId:[channel_ receive]];
  }
}

- (void)onSaveStateChangedWithBoolean:(BOOL)isSaving
                          withBoolean:(BOOL)isPending {
  [((id<ComGoodowRealtimeChannelOperationOperationSucker_Listener>) nil_chk(bridge_)) onSaveStateChangedWithBoolean:isSaving withBoolean:isPending];
}

+ (void)initialize {
  if (self == [ComGoodowRealtimeChannelOperationOperationSucker class]) {
    ComGoodowRealtimeChannelOperationOperationSucker_logger_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationOperationSucker class]] getName]];
    ComGoodowRealtimeChannelOperationOperationSucker_demuxer_ = [ComGoodowRealtimeChannelChannelDemuxer get];
  }
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeChannelOperationOperationSucker *)other {
  [super copyAllFieldsTo:other];
  other->bridge_ = bridge_;
  other->channel_ = channel_;
  other->id__ = id__;
  other->outputSink_ = outputSink_;
  other->receiveChannel_ = receiveChannel_;
  other->rpc_ = rpc_;
  other->sessionId_ = sessionId_;
  other->transformer_ = transformer_;
}

@end
@implementation ComGoodowRealtimeChannelOperationOperationSucker_$1

- (void)close {
  [((ComGoodowRealtimeChannelChannelDemuxer *) nil_chk([ComGoodowRealtimeChannelOperationOperationSucker demuxer])) closeWithNSString:val$id_];
}

- (void)consumeWithId:(ComGoodowRealtimeOperationRealtimeOperation *)op {
  [((ComGoodowRealtimeChannelOperationGenericOperationChannel *) nil_chk(this$0_->channel_)) sendWithId:op];
}

- (id)initWithComGoodowRealtimeChannelOperationOperationSucker:(ComGoodowRealtimeChannelOperationOperationSucker *)outer$
                                                  withNSString:(NSString *)capture$0 {
  this$0_ = outer$;
  val$id_ = capture$0;
  return [super init];
}

@end
@implementation ComGoodowRealtimeChannelOperationOperationSucker_$2

- (void)onSuccessWithGDRJsonValue:(id<GDRJsonValue>)snapshot
                     withNSString:(NSString *)sid
                          withInt:(int)revision {
  this$0_->bridge_ = val$listener_;
  [((ComGoodowRealtimeChannelChannelDemuxer *) nil_chk([ComGoodowRealtimeChannelOperationOperationSucker demuxer])) register__WithNSString:this$0_->id__ withComGoodowRealtimeChannelOperationOperationSucker_Listener:this$0_->bridge_ withComGoodowRealtimeChannelOperationReceiveOpChannelImpl:(ComGoodowRealtimeChannelOperationReceiveOpChannelImpl *) check_class_cast(this$0_->receiveChannel_, [ComGoodowRealtimeChannelOperationReceiveOpChannelImpl class])];
  [((ComGoodowRealtimeChannelOperationGenericOperationChannel *) nil_chk(this$0_->channel_)) connectWithInt:revision withNSString:this$0_->sessionId_];
  [((id<ComGoodowRealtimeChannelRpcSnapshotService_Callback>) nil_chk(val$callback_)) onSuccessWithGDRJsonValue:snapshot withNSString:this$0_->sessionId_ withInt:revision];
  [((ComGoodowRealtimeChannelPollChannel *) nil_chk([ComGoodowRealtimeChannelPollChannel get])) connect];
}

- (id)initWithComGoodowRealtimeChannelOperationOperationSucker:(ComGoodowRealtimeChannelOperationOperationSucker *)outer$
 withComGoodowRealtimeChannelOperationOperationSucker_Listener:(id<ComGoodowRealtimeChannelOperationOperationSucker_Listener>)capture$0
       withComGoodowRealtimeChannelRpcSnapshotService_Callback:(id<ComGoodowRealtimeChannelRpcSnapshotService_Callback>)capture$1 {
  this$0_ = outer$;
  val$listener_ = capture$0;
  val$callback_ = capture$1;
  return [super init];
}

@end
