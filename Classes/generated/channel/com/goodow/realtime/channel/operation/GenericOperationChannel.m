//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java
//
//  Created by retechretech on 13-5-25.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/goodow/realtime/channel/operation/GenericOperationChannel.h"
#import "com/goodow/realtime/channel/operation/TransformQueue.h"
#import "com/goodow/realtime/channel/util/FuzzingBackOffGenerator.h"
#import "com/goodow/realtime/operation/Operation.h"
#import "com/goodow/realtime/util/ModelFactory.h"
#import "com/goodow/realtime/util/ModelNative.h"
#import "elemental/util/ArrayOf.h"
#import "elemental/util/ArrayOfInt.h"
#import "elemental/util/Collections.h"
#import "java/lang/AssertionError.h"
#import "java/lang/IllegalArgumentException.h"
#import "java/lang/Runnable.h"
#import "java/lang/Throwable.h"
#import "java/util/logging/Level.h"
#import "java/util/logging/Logger.h"

@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel

static JavaUtilLoggingLogger * ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_;

@synthesize backoffGenerator = backoffGenerator_;
@synthesize isMaybeSendTaskScheduled = isMaybeSendTaskScheduled_;
@synthesize maybeSendTask = maybeSendTask_;
@synthesize isResyncTaskScheduled = isResyncTaskScheduled_;
@synthesize delayedResyncTask = delayedResyncTask_;
@synthesize receiveListener = receiveListener_;
@synthesize channel = channel_;
@synthesize submitService = submitService_;
@synthesize listener = listener_;
@synthesize state = state_;
@synthesize queue = queue_;
@synthesize sessionId = sessionId_;
@synthesize retryVersion = retryVersion_;
@synthesize submitCallback = submitCallback_;
@synthesize versionCallback = versionCallback_;

+ (JavaUtilLoggingLogger *)logger {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_;
}

- (id)initWithComGoodowRealtimeChannelOperationTransformQueue:(ComGoodowRealtimeChannelOperationTransformQueue *)queue
withComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel:(id<ComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel>)channel
withComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService:(id<ComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService>)submitService
withComGoodowRealtimeChannelOperationGenericOperationChannel_Listener:(id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>)listener {
  if ((self = [super init])) {
    backoffGenerator_ = [[ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator alloc] initWithInt:1500 withInt:1800 * 1000 withDouble:0.5];
    maybeSendTask_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_$1 alloc] initWithComGoodowRealtimeChannelOperationGenericOperationChannel:self];
    delayedResyncTask_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_$2 alloc] initWithComGoodowRealtimeChannelOperationGenericOperationChannel:self];
    receiveListener_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_$3 alloc] initWithComGoodowRealtimeChannelOperationGenericOperationChannel:self];
    state_ = [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum UNINITIALISED];
    retryVersion_ = -1;
    self.queue = queue;
    self.channel = channel;
    self.submitService = submitService;
    self.listener = listener;
  }
  return self;
}

- (void)connectWithInt:(int)revision
          withNSString:(NSString *)sessionId {
  NSAssert(![self isConnected], @"Already connected");
  NSAssert(sessionId != nil, @"Null sessionId");
  NSAssert(revision >= 0, [[NSString stringWithFormat:@"Invalid revision J2OBJC_COMMA() %d" J2OBJC_COMMA() revision] description]);
  self.sessionId = sessionId;
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel>) NIL_CHK(channel_)) connectWithInt:revision withComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel_Listener:receiveListener_];
  [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) init__WithInt:revision];
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum ALL_ACKED]];
}

- (void)disconnect {
  [self checkConnected];
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel>) NIL_CHK(channel_)) disconnect];
  sessionId_ = nil;
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum UNINITIALISED]];
}

- (BOOL)isClean {
  [self checkConnected];
  BOOL ret = ![((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasQueuedClientOps] && ![((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasUnacknowledgedClientOps];
  NSAssert(!ret || state_ == [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum ALL_ACKED], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:326 condition failed: assert !ret || state == State.ALL_ACKED;");
  return ret;
}

- (BOOL)isConnected {
  NSAssert(state_ != [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum UNINITIALISED] || sessionId_ == nil, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:332 condition failed: assert state != State.UNINITIALISED || sessionId == null;");
  return sessionId_ != nil;
}

- (id)peek {
  [self checkConnected];
  return [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasServerOp] ? [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) peekServerOp] : nil;
}

- (id)receive {
  [self checkConnected];
  return [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasServerOp] ? [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) removeServerOp] : nil;
}

- (int)revision {
  [self checkConnected];
  return [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) revision];
}

- (void)sendWithId:(id)operation {
  if ([NIL_CHK(operation) isNoOp]) {
    return;
  }
  [self checkConnected];
  [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) clientOpWithId:operation];
  if (![((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasUnacknowledgedClientOps]) {
    NSAssert(state_ == [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum ALL_ACKED], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:362 condition failed: assert state == State.ALL_ACKED;");
    isMaybeSendTaskScheduled_ = YES;
    [((id<ComGoodowRealtimeUtilModelFactory>) [ComGoodowRealtimeUtilModelNative get]) scheduleDeferredWithJavaLangRunnable:maybeSendTask_];
  }
}

- (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)getState {
  return state_;
}

- (void)allAcked {
  [self synced];
  [((ComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback *) NIL_CHK(submitCallback_)) discard];
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum ALL_ACKED]];
  if ([((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasQueuedClientOps]) {
    isMaybeSendTaskScheduled_ = YES;
    [((id<ComGoodowRealtimeUtilModelFactory>) [ComGoodowRealtimeUtilModelNative get]) scheduleDeferredWithJavaLangRunnable:maybeSendTask_];
  }
}

- (void)checkConnected {
  NSAssert([self isConnected], @"Not connected");
}

- (void)checkStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)newState {
  switch ([newState ordinal]) {
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_UNINITIALISED:
    NSAssert(sessionId_ == nil, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:395 condition failed: assert sessionId == null;");
    break;
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_ALL_ACKED:
    NSAssert(sessionId_ != nil, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:398 condition failed: assert sessionId != null;");
    NSAssert([((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) revision] >= 0, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:399 condition failed: assert queue.revision() >= 0;");
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:submitCallback_], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:400 condition failed: assert isDiscarded(submitCallback);");
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:versionCallback_], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:401 condition failed: assert isDiscarded(versionCallback);");
    NSAssert(retryVersion_ == -1, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:402 condition failed: assert retryVersion == -1;");
    NSAssert(![((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasUnacknowledgedClientOps], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:403 condition failed: assert !queue.hasUnacknowledgedClientOps();");
    NSAssert(!isResyncTaskScheduled_, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:404 condition failed: assert !isResyncTaskScheduled;");
    break;
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_WAITING_ACK:
    NSAssert(![self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:submitCallback_], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:407 condition failed: assert !isDiscarded(submitCallback);");
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:versionCallback_], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:408 condition failed: assert isDiscarded(versionCallback);");
    NSAssert(retryVersion_ == -1, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:409 condition failed: assert retryVersion == -1;");
    NSAssert(!isMaybeSendTaskScheduled_, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:410 condition failed: assert !isMaybeSendTaskScheduled;");
    NSAssert(!isResyncTaskScheduled_, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:411 condition failed: assert !isResyncTaskScheduled;");
    break;
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_DELAY_RESYNC:
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:submitCallback_], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:414 condition failed: assert isDiscarded(submitCallback);");
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:versionCallback_], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:415 condition failed: assert isDiscarded(versionCallback);");
    NSAssert(retryVersion_ == -1, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:416 condition failed: assert retryVersion == -1;");
    NSAssert(!isMaybeSendTaskScheduled_, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:417 condition failed: assert !isMaybeSendTaskScheduled;");
    NSAssert(isResyncTaskScheduled_, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:418 condition failed: assert isResyncTaskScheduled;");
    break;
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_WAITING_SYNC:
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:submitCallback_], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:421 condition failed: assert isDiscarded(submitCallback);");
    NSAssert(![self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:versionCallback_], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:422 condition failed: assert !isDiscarded(versionCallback);");
    NSAssert(!isMaybeSendTaskScheduled_, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:423 condition failed: assert !isMaybeSendTaskScheduled;");
    NSAssert(!isResyncTaskScheduled_, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:424 condition failed: assert !isResyncTaskScheduled;");
    break;
    default:
    @throw [[JavaLangAssertionError alloc] initWithId:[NSString stringWithFormat:@"State %@ not implemented", state_]];
  }
}

- (void)delayResync {
  isResyncTaskScheduled_ = YES;
  [((id<ComGoodowRealtimeUtilModelFactory>) [ComGoodowRealtimeUtilModelNative get]) scheduleFixedDelayWithJavaLangRunnable:delayedResyncTask_ withInt:[((ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator *) NIL_CHK(backoffGenerator_)) next].targetDelay];
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum DELAY_RESYNC]];
}

- (void)doResync {
  versionCallback_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_$4 alloc] initWithComGoodowRealtimeChannelOperationGenericOperationChannel:self];
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService>) NIL_CHK(submitService_)) requestRevisionWithNSString:sessionId_ withComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService_Callback:versionCallback_];
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum WAITING_SYNC]];
}

- (void)failWithJavaLangThrowable:(JavaLangThrowable *)e {
  [((JavaUtilLoggingLogger *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"channel.fail()"];
  if (![self isConnected]) {
    [((JavaUtilLoggingLogger *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"not connected"];
    return;
  }
  [((JavaUtilLoggingLogger *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"Permanent failure"];
  [self disconnect];
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) NIL_CHK(listener_)) onErrorWithJavaLangThrowable:e];
}

- (BOOL)isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:(ComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback *)c {
  return c == nil || ((ComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback *) NIL_CHK(c)).discarded;
}

- (void)maybeEagerlyHandleAckWithInt:(int)appliedRevision {
  id<ElementalUtilArrayOf> ownOps = ((id<ElementalUtilArrayOf>) [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) ackOpsIfVersionMatchesWithInt:appliedRevision]);
  if (ownOps == nil) {
    [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel>) NIL_CHK(channel_)) onKnownHeadRevisionWithInt:appliedRevision];
    return;
  }
  [((JavaUtilLoggingLogger *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"Eagerly acked @%d", appliedRevision]];
  NSAssert(![((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasUnacknowledgedClientOps], @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:483 condition failed: assert !queue.hasUnacknowledgedClientOps();");
  [self allAcked];
  BOOL isClean = [self isClean];
  for (int i = 0, len = [((id<ElementalUtilArrayOf>) NIL_CHK(ownOps)) length]; i < len; i++) {
    BOOL isLast = i == [((id<ElementalUtilArrayOf>) NIL_CHK(ownOps)) length] - 1;
    [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) NIL_CHK(listener_)) onAckWithId:[((id<ElementalUtilArrayOf>) NIL_CHK(ownOps)) getWithInt:i] withBOOL:isClean && isLast];
  }
}

- (void)maybeSend {
  if ([((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasUnacknowledgedClientOps]) {
    [((JavaUtilLoggingLogger *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"%@, Has %d unacked...", state_, [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) unackedClientOpsCount]]];
    return;
  }
  if ([((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasQueuedClientOps]) {
    [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) pushQueuedOpsToUnacked];
    if ([((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasUnacknowledgedClientOps]) {
      [self sendUnackedOps];
    }
  }
}

- (void)maybeSynced {
  if (state_ == [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum WAITING_SYNC] && retryVersion_ != -1 && [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) revision] >= retryVersion_) {
    [self synced];
    if ([((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasUnacknowledgedClientOps]) {
      [self sendUnackedOps];
    }
  }
}

- (void)onAckOwnOperationWithInt:(int)resultingRevision
                          withId:(id)ackedOp {
  BOOL alreadyAckedByXhr = [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) expectedAckWithInt:resultingRevision];
  if (alreadyAckedByXhr) {
    return;
  }
  BOOL allAcked = [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) ackClientOpWithInt:resultingRevision];
  [((JavaUtilLoggingLogger *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"Ack @%d, %d ops remaining", resultingRevision, [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) unackedClientOpsCount]]];
  if (allAcked) {
    [self allAcked];
  }
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) NIL_CHK(listener_)) onAckWithId:ackedOp withBOOL:[self isClean]];
}

- (void)onIncomingOperationWithInt:(int)revision
                            withId:(id)operation {
  [((JavaUtilLoggingLogger *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"Incoming %d %@", revision, state_]];
  [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) serverOpWithInt:revision withId:operation];
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) NIL_CHK(listener_)) onRemoteOpWithId:operation];
}

- (void)sendUnackedOps {
  id<ElementalUtilArrayOf> ops = ((id<ElementalUtilArrayOf>) [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) unackedClientOps]);
  NSAssert([((id<ElementalUtilArrayOf>) NIL_CHK(ops)) length] > 0, @"src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:556 condition failed: assert ops.length() > 0;");
  [((JavaUtilLoggingLogger *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"Sending %d ops @%d", [((id<ElementalUtilArrayOf>) NIL_CHK(ops)) length], [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) revision]]];
  submitCallback_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_$5 alloc] initWithComGoodowRealtimeChannelOperationGenericOperationChannel:self];
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService>) NIL_CHK(submitService_)) submitOperationsWithNSString:sessionId_ withInt:[((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) revision] withElementalUtilArrayOf:ops withComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService_Callback:submitCallback_];
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum WAITING_ACK]];
}

- (void)setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)newState {
  NSAssert([((id<ElementalUtilArrayOfInt>) NIL_CHK(state_.to)) containsWithInt:[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) NIL_CHK(newState)) ordinal]], [[NSString stringWithFormat:@"Invalid state transition %@ -> %@" J2OBJC_COMMA() state_ J2OBJC_COMMA() newState] description]);
  [self checkStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:newState];
  state_ = newState;
  switch ([newState ordinal]) {
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_ALL_ACKED:
    [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) NIL_CHK(listener_)) onSaveStateChangedWithBOOL:NO withBOOL:[((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasQueuedClientOps]];
    break;
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_WAITING_ACK:
    [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) NIL_CHK(listener_)) onSaveStateChangedWithBOOL:YES withBOOL:[((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) hasQueuedClientOps]];
    break;
    default:
    break;
  }
}

- (void)synced {
  [((JavaUtilLoggingLogger *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"synced @%d", [((ComGoodowRealtimeChannelOperationTransformQueue *) NIL_CHK(queue_)) revision]]];
  retryVersion_ = -1;
  isResyncTaskScheduled_ = NO;
  [((ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator *) NIL_CHK(backoffGenerator_)) reset];
  if (versionCallback_ != nil) {
    [versionCallback_ discard];
  }
}

+ (void)initialize {
  if (self == [ComGoodowRealtimeChannelOperationGenericOperationChannel class]) {
    ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel class]] getName]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComGoodowRealtimeChannelOperationGenericOperationChannel *typedCopy = (ComGoodowRealtimeChannelOperationGenericOperationChannel *) copy;
  typedCopy.backoffGenerator = backoffGenerator_;
  typedCopy.isMaybeSendTaskScheduled = isMaybeSendTaskScheduled_;
  typedCopy.maybeSendTask = maybeSendTask_;
  typedCopy.isResyncTaskScheduled = isResyncTaskScheduled_;
  typedCopy.delayedResyncTask = delayedResyncTask_;
  typedCopy.receiveListener = receiveListener_;
  typedCopy.channel = channel_;
  typedCopy.submitService = submitService_;
  typedCopy.listener = listener_;
  typedCopy.state = state_;
  typedCopy.queue = queue_;
  typedCopy.sessionId = sessionId_;
  typedCopy.retryVersion = retryVersion_;
  typedCopy.submitCallback = submitCallback_;
  typedCopy.versionCallback = versionCallback_;
}

@end

static ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED;
static ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED;
static ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK;
static ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC;
static ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC;
IOSObjectArray *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_values;

@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum

+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)UNINITIALISED {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED;
}
+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)ALL_ACKED {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED;
}
+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)WAITING_ACK {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK;
}
+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)DELAY_RESYNC {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC;
}
+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)WAITING_SYNC {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

@synthesize to = to_;

- (void)transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:(IOSObjectArray *)validTransitionStates {
  to_ = [ElementalUtilCollections arrayOfInt];
  [((id<ElementalUtilArrayOfInt>) NIL_CHK(to_)) pushWithInt:[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED)) ordinal]];
  {
    IOSObjectArray *a__ = validTransitionStates;
    int n__ = (int) [((IOSObjectArray *) NIL_CHK(a__)) count];
    for (int i__ = 0; i__ < n__; i__++) {
      ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *state = ((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) [((IOSObjectArray *) NIL_CHK(a__)) objectAtIndex:i__]);
      [((id<ElementalUtilArrayOfInt>) NIL_CHK(to_)) pushWithInt:[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) NIL_CHK(state)) ordinal]];
    }
  }
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

+ (void)initialize {
  if (self == [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]) {
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum alloc] initWithNSString:@"UNINITIALISED" withInt:0];
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum alloc] initWithNSString:@"ALL_ACKED" withInt:1];
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum alloc] initWithNSString:@"WAITING_ACK" withInt:2];
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum alloc] initWithNSString:@"DELAY_RESYNC" withInt:3];
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum alloc] initWithNSString:@"WAITING_SYNC" withInt:4];
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC, nil } count:5 type:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]]];
    {
[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED)) transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:[IOSObjectArray arrayWithType:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]] count:1, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED ]];
[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED)) transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:[IOSObjectArray arrayWithType:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]] count:1, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK ]];
[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK)) transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:[IOSObjectArray arrayWithType:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]] count:2, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC ]];
[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC)) transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:[IOSObjectArray arrayWithType:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]] count:2, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC ]];
[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) NIL_CHK(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC)) transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:[IOSObjectArray arrayWithType:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]] count:3, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC ]];
}
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_values];
}

+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_values count]; i++) {
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *e = [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_$1

@synthesize this$0 = this$0_;

- (void)run {
  this$0_.isMaybeSendTaskScheduled = NO;
  [this$0_ maybeSend];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComGoodowRealtimeChannelOperationGenericOperationChannel_$1 *typedCopy = (ComGoodowRealtimeChannelOperationGenericOperationChannel_$1 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_$2

@synthesize this$0 = this$0_;

- (void)run {
  if (!this$0_.isResyncTaskScheduled) {
    return;
  }
  this$0_.isResyncTaskScheduled = NO;
  [this$0_ doResync];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComGoodowRealtimeChannelOperationGenericOperationChannel_$2 *typedCopy = (ComGoodowRealtimeChannelOperationGenericOperationChannel_$2 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_$3

@synthesize this$0 = this$0_;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  if (![this$0_ isConnected]) {
    return;
  }
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) NIL_CHK(this$0_.listener)) onErrorWithJavaLangThrowable:e];
}

- (void)onMessageWithInt:(int)resultingRevision
            withNSString:(NSString *)sid
                  withId:(id)operation {
  if (![this$0_ isConnected]) {
    return;
  }
  [((JavaUtilLoggingLogger *) NIL_CHK([ComGoodowRealtimeChannelOperationGenericOperationChannel logger])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel FINE] withNSString:[NSString stringWithFormat:@"my sid=%@, incoming sid=%@", this$0_.sessionId, sid]];
  if ([NIL_CHK(this$0_.sessionId) isEqual:sid]) {
    [this$0_ onAckOwnOperationWithInt:resultingRevision withId:operation];
  }
  else {
    [this$0_ onIncomingOperationWithInt:resultingRevision withId:operation];
  }
  [this$0_ maybeSynced];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComGoodowRealtimeChannelOperationGenericOperationChannel_$3 *typedCopy = (ComGoodowRealtimeChannelOperationGenericOperationChannel_$3 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback

@synthesize this$0 = this$0_;
@synthesize discarded = discarded_;

- (void)onConnectionErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  if (![this$0_ isConnected]) {
    return;
  }
  if (discarded_) {
    [((JavaUtilLoggingLogger *) NIL_CHK([ComGoodowRealtimeChannelOperationGenericOperationChannel logger])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"Ignoring failure, " withJavaLangThrowable:e];
    return;
  }
  discarded_ = YES;
  [((JavaUtilLoggingLogger *) NIL_CHK([ComGoodowRealtimeChannelOperationGenericOperationChannel logger])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"Retryable failure, will resync." withJavaLangThrowable:e];
  [this$0_ delayResync];
}

- (void)onFatalErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  [this$0_ failWithJavaLangThrowable:e];
}

- (void)onSuccessWithInt:(int)appliedRevision {
  if (![this$0_ isConnected]) {
    return;
  }
  if (discarded_) {
    [((JavaUtilLoggingLogger *) NIL_CHK([ComGoodowRealtimeChannelOperationGenericOperationChannel logger])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"Ignoring success @%d", appliedRevision]];
    return;
  }
  discarded_ = YES;
  [self successWithInt:appliedRevision];
}

- (void)discard {
  if (discarded_) {
    return;
  }
  discarded_ = YES;
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService>) NIL_CHK(this$0_.submitService)) callbackNotNeededWithComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService_Callback:self];
}

- (void)successWithInt:(int)appliedRevision {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
    discarded_ = NO;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback *typedCopy = (ComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback *) copy;
  typedCopy.this$0 = this$0_;
  typedCopy.discarded = discarded_;
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_$4

@synthesize this$1 = this$1_;

- (void)successWithInt:(int)appliedRevision {
  [((JavaUtilLoggingLogger *) NIL_CHK([ComGoodowRealtimeChannelOperationGenericOperationChannel logger])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"version callback returned @%d", appliedRevision]];
  this$1_.retryVersion = appliedRevision;
  [this$1_ maybeSynced];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  if ((self = [super initWithComGoodowRealtimeChannelOperationGenericOperationChannel:outer$])) {
    this$1_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComGoodowRealtimeChannelOperationGenericOperationChannel_$4 *typedCopy = (ComGoodowRealtimeChannelOperationGenericOperationChannel_$4 *) copy;
  typedCopy.this$1 = this$1_;
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_$5

@synthesize this$1 = this$1_;

- (void)successWithInt:(int)appliedRevision {
  [this$1_ maybeEagerlyHandleAckWithInt:appliedRevision];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  if ((self = [super initWithComGoodowRealtimeChannelOperationGenericOperationChannel:outer$])) {
    this$1_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComGoodowRealtimeChannelOperationGenericOperationChannel_$5 *typedCopy = (ComGoodowRealtimeChannelOperationGenericOperationChannel_$5 *) copy;
  typedCopy.this$1 = this$1_;
}

@end
