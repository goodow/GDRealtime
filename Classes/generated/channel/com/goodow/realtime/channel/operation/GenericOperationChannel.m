//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/goodow/realtime/channel/operation/GenericOperationChannel.h"
#include "com/goodow/realtime/channel/operation/TransformQueue.h"
#include "com/goodow/realtime/channel/util/ChannelFactory.h"
#include "com/goodow/realtime/channel/util/ChannelNative.h"
#include "com/goodow/realtime/channel/util/FuzzingBackOffGenerator.h"
#include "com/goodow/realtime/operation/Transformer.h"
#include "java/lang/AssertionError.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Runnable.h"
#include "java/lang/Throwable.h"
#include "java/util/EnumSet.h"
#include "java/util/List.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"

@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel

static JavaUtilLoggingLogger * ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_;

+ (JavaUtilLoggingLogger *)logger {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_;
}

- (id)initWithNSString:(NSString *)id_
withComGoodowRealtimeOperationTransformer:(id<ComGoodowRealtimeOperationTransformer>)transformer
withComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel:(id<ComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel>)channel
withComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService:(id<ComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService>)submitService
withComGoodowRealtimeChannelOperationGenericOperationChannel_Listener:(id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>)listener {
  if (self = [super init]) {
    maybeSendTask_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_$1 alloc] initWithComGoodowRealtimeChannelOperationGenericOperationChannel:self];
    delayedResyncTask_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_$2 alloc] initWithComGoodowRealtimeChannelOperationGenericOperationChannel:self];
    receiveListener_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_$3 alloc] initWithComGoodowRealtimeChannelOperationGenericOperationChannel:self];
    backoffGenerator_ = [[ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator alloc] initWithInt:1500 withInt:1800 * 1000 withDouble:0.5];
    state_ = [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum UNINITIALISED];
    retryVersion_ = -1;
    self->id__ = id_;
    self->queue_ = [[ComGoodowRealtimeChannelOperationTransformQueue alloc] initWithComGoodowRealtimeOperationTransformer:transformer];
    self->channel_ = channel;
    self->submitService_ = submitService;
    self->listener_ = listener;
  }
  return self;
}

- (void)connectWithInt:(int)revision
          withNSString:(NSString *)sessionId {
  NSAssert(![self isConnected], @"Already connected");
  NSAssert(sessionId != nil, @"Null sessionId");
  NSAssert(revision >= 0, [[NSString stringWithFormat:@"Invalid revision J2OBJC_COMMA() %d" J2OBJC_COMMA() revision] description]);
  self->sessionId_ = sessionId;
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel>) nil_chk(channel_)) connectWithInt:revision withComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel_Listener:receiveListener_];
  [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) init__WithInt:revision];
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum ALL_ACKED]];
}

- (void)disconnect {
  [self checkConnected];
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel>) nil_chk(channel_)) disconnect];
  sessionId_ = nil;
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum UNINITIALISED]];
}

- (BOOL)isClean {
  [self checkConnected];
  BOOL ret = ![((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) hasQueuedClientOps] && ![queue_ hasUnacknowledgedClientOps];
  NSAssert(!ret || state_ == [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum ALL_ACKED], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:323 condition failed: assert !ret || state == State.ALL_ACKED;");
  return ret;
}

- (BOOL)isConnected {
  NSAssert(state_ != [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum UNINITIALISED] || sessionId_ == nil, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:329 condition failed: assert state != State.UNINITIALISED || sessionId == null;");
  return sessionId_ != nil;
}

- (id)peek {
  [self checkConnected];
  return [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) hasServerOp] ? [queue_ peekServerOp] : nil;
}

- (id)receive {
  [self checkConnected];
  return [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) hasServerOp] ? [queue_ removeServerOp] : nil;
}

- (int)revision {
  [self checkConnected];
  return [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) revision];
}

- (void)sendWithId:(id)operation {
  [self checkConnected];
  [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) clientOpWithId:operation];
  if (!isMaybeSendTaskScheduled_ && ![queue_ hasUnacknowledgedClientOps]) {
    NSAssert(state_ == [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum ALL_ACKED], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:356 condition failed: assert state == State.ALL_ACKED;");
    isMaybeSendTaskScheduled_ = YES;
    [((id<ComGoodowRealtimeChannelUtilChannelFactory>) nil_chk([ComGoodowRealtimeChannelUtilChannelNative get])) scheduleDeferredWithJavaLangRunnable:maybeSendTask_];
  }
}

- (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)getState {
  return state_;
}

- (void)allAcked {
  [self synced];
  [((ComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback *) nil_chk(submitCallback_)) discard];
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum ALL_ACKED]];
  if (!isMaybeSendTaskScheduled_ && [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) hasQueuedClientOps]) {
    isMaybeSendTaskScheduled_ = YES;
    [((id<ComGoodowRealtimeChannelUtilChannelFactory>) nil_chk([ComGoodowRealtimeChannelUtilChannelNative get])) scheduleDeferredWithJavaLangRunnable:maybeSendTask_];
  }
}

- (void)checkConnected {
  NSAssert([self isConnected], @"Not connected");
}

- (void)checkStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)newState {
  switch ([newState ordinal]) {
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_UNINITIALISED:
    NSAssert(sessionId_ == nil, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:389 condition failed: assert sessionId == null;");
    break;
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_ALL_ACKED:
    NSAssert(sessionId_ != nil, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:392 condition failed: assert sessionId != null;");
    NSAssert([((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) revision] >= 0, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:393 condition failed: assert queue.revision() >= 0;");
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:submitCallback_], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:394 condition failed: assert isDiscarded(submitCallback);");
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:versionCallback_], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:395 condition failed: assert isDiscarded(versionCallback);");
    NSAssert(retryVersion_ == -1, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:396 condition failed: assert retryVersion == -1;");
    NSAssert(![queue_ hasUnacknowledgedClientOps], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:397 condition failed: assert !queue.hasUnacknowledgedClientOps();");
    NSAssert(!isResyncTaskScheduled_, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:398 condition failed: assert !isResyncTaskScheduled;");
    break;
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_WAITING_ACK:
    NSAssert(![self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:submitCallback_], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:401 condition failed: assert !isDiscarded(submitCallback);");
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:versionCallback_], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:402 condition failed: assert isDiscarded(versionCallback);");
    NSAssert(retryVersion_ == -1, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:403 condition failed: assert retryVersion == -1;");
    NSAssert(!isMaybeSendTaskScheduled_, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:404 condition failed: assert !isMaybeSendTaskScheduled;");
    NSAssert(!isResyncTaskScheduled_, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:405 condition failed: assert !isResyncTaskScheduled;");
    break;
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_DELAY_RESYNC:
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:submitCallback_], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:408 condition failed: assert isDiscarded(submitCallback);");
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:versionCallback_], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:409 condition failed: assert isDiscarded(versionCallback);");
    NSAssert(retryVersion_ == -1, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:410 condition failed: assert retryVersion == -1;");
    NSAssert(!isMaybeSendTaskScheduled_, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:411 condition failed: assert !isMaybeSendTaskScheduled;");
    NSAssert(isResyncTaskScheduled_, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:412 condition failed: assert isResyncTaskScheduled;");
    break;
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_WAITING_SYNC:
    NSAssert([self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:submitCallback_], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:415 condition failed: assert isDiscarded(submitCallback);");
    NSAssert(![self isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:versionCallback_], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:416 condition failed: assert !isDiscarded(versionCallback);");
    NSAssert(!isMaybeSendTaskScheduled_, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:417 condition failed: assert !isMaybeSendTaskScheduled;");
    NSAssert(!isResyncTaskScheduled_, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:418 condition failed: assert !isResyncTaskScheduled;");
    break;
    default:
    @throw [[JavaLangAssertionError alloc] initWithId:[NSString stringWithFormat:@"State %@ not implemented", state_]];
  }
}

- (void)delayResync {
  if (!isResyncTaskScheduled_) {
    isResyncTaskScheduled_ = YES;
    [((id<ComGoodowRealtimeChannelUtilChannelFactory>) nil_chk([ComGoodowRealtimeChannelUtilChannelNative get])) scheduleFixedDelayWithJavaLangRunnable:delayedResyncTask_ withInt:((ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator_BackOffParameters *) nil_chk([((ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator *) nil_chk(backoffGenerator_)) next]))->targetDelay_];
  }
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum DELAY_RESYNC]];
}

- (void)doResync {
  versionCallback_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_$4 alloc] initWithComGoodowRealtimeChannelOperationGenericOperationChannel:self];
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService>) nil_chk(submitService_)) requestRevisionWithNSString:id__ withNSString:sessionId_ withComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService_Callback:versionCallback_];
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum WAITING_SYNC]];
}

- (void)failWithJavaLangThrowable:(JavaLangThrowable *)e {
  [((JavaUtilLoggingLogger *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"channel.fail()"];
  if (![self isConnected]) {
    [ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_ logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"not connected"];
    return;
  }
  [ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_ logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"Permanent failure"];
  [self disconnect];
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) nil_chk(listener_)) onErrorWithJavaLangThrowable:e];
}

- (BOOL)isDiscardedWithComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback:(ComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback *)c {
  return c == nil || c->discarded_;
}

- (void)maybeEagerlyHandleAckWithInt:(int)appliedRevision {
  id<JavaUtilList> ownOps = [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) ackOpsIfVersionMatchesWithInt:appliedRevision];
  if (ownOps == nil) {
    [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel>) nil_chk(channel_)) onKnownHeadRevisionWithInt:appliedRevision];
    return;
  }
  [((JavaUtilLoggingLogger *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"Eagerly acked @%d", appliedRevision]];
  NSAssert(![queue_ hasUnacknowledgedClientOps], @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:481 condition failed: assert !queue.hasUnacknowledgedClientOps();");
  [self allAcked];
  BOOL isClean = [self isClean];
  int size = [((id<JavaUtilList>) nil_chk(ownOps)) size];
  int startRev = appliedRevision - size + 1;
  int i = 0;
  for (id __strong serverHistoryOp in ownOps) {
    BOOL isLast = i == size - 1;
    [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_ReceiveOpChannel>) nil_chk(channel_)) onMessageWithInt:startRev + i++ withNSString:sessionId_ withId:serverHistoryOp];
    [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) nil_chk(listener_)) onAckWithId:serverHistoryOp withBoolean:isClean && isLast];
  }
}

- (void)maybeSend {
  if ([((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) hasUnacknowledgedClientOps]) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"%@, Has %d unacked...", state_, [queue_ unackedClientOpsCount]]];
    return;
  }
  if ([queue_ hasQueuedClientOps]) {
    (void) [queue_ pushQueuedOpsToUnacked];
    if ([queue_ hasUnacknowledgedClientOps]) {
      [self sendUnackedOps];
    }
  }
}

- (void)maybeSynced {
  if (state_ == [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum WAITING_SYNC] && retryVersion_ != -1 && [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) revision] >= retryVersion_) {
    [self synced];
    if ([queue_ hasUnacknowledgedClientOps]) {
      [self sendUnackedOps];
    }
  }
}

- (void)onAckOwnOperationWithInt:(int)resultingRevision
                          withId:(id)ackedOp {
  BOOL alreadyAckedByXhr = [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) expectedAckWithInt:resultingRevision];
  if (alreadyAckedByXhr) {
    return;
  }
  BOOL allAcked = [queue_ ackClientOpWithInt:resultingRevision];
  [((JavaUtilLoggingLogger *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"Ack @%d, %d ops remaining", resultingRevision, [queue_ unackedClientOpsCount]]];
  if (allAcked) {
    [self allAcked];
  }
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) nil_chk(listener_)) onAckWithId:ackedOp withBoolean:[self isClean]];
}

- (void)onIncomingOperationWithInt:(int)revision
                            withId:(id)operation {
  [((JavaUtilLoggingLogger *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"Incoming %d %@", revision, state_]];
  [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) serverOpWithInt:revision withId:operation];
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) nil_chk(listener_)) onRemoteOpWithId:operation];
}

- (void)sendUnackedOps {
  id<JavaUtilList> ops = [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) unackedClientOps];
  NSAssert([((id<JavaUtilList>) nil_chk(ops)) size] > 0, @"/Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/operation/GenericOperationChannel.java:559 condition failed: assert ops.size() > 0;");
  [((JavaUtilLoggingLogger *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"Sending %d ops @%d", [ops size], [queue_ revision]]];
  submitCallback_ = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_$5 alloc] initWithComGoodowRealtimeChannelOperationGenericOperationChannel:self];
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService>) nil_chk(submitService_)) submitOperationsWithNSString:id__ withNSString:sessionId_ withInt:[queue_ revision] withJavaUtilList:ops withComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService_Callback:submitCallback_];
  [self setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum WAITING_ACK]];
}

- (void)setStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)newState {
  ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *oldState = state_;
  NSAssert([((JavaUtilEnumSet *) nil_chk(((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) nil_chk(oldState))->to_)) containsWithId:newState], [[NSString stringWithFormat:@"Invalid state transition %@ -> %@" J2OBJC_COMMA() oldState J2OBJC_COMMA() newState] description]);
  [self checkStateWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum:newState];
  state_ = newState;
  switch ([newState ordinal]) {
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_ALL_ACKED:
    if (oldState != [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum UNINITIALISED]) {
      [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) nil_chk(listener_)) onSaveStateChangedWithBoolean:NO withBoolean:[((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) hasQueuedClientOps]];
    }
    break;
    case ComGoodowRealtimeChannelOperationGenericOperationChannel_State_WAITING_ACK:
    [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) nil_chk(listener_)) onSaveStateChangedWithBoolean:YES withBoolean:[((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) hasQueuedClientOps]];
    break;
    default:
    break;
  }
}

- (void)synced {
  [((JavaUtilLoggingLogger *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_)) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"synced @%d", [((ComGoodowRealtimeChannelOperationTransformQueue *) nil_chk(queue_)) revision]]];
  retryVersion_ = -1;
  isResyncTaskScheduled_ = NO;
  [((ComGoodowRealtimeChannelUtilFuzzingBackOffGenerator *) nil_chk(backoffGenerator_)) reset];
  if (versionCallback_ != nil) {
    [versionCallback_ discard];
  }
}

+ (void)initialize {
  if (self == [ComGoodowRealtimeChannelOperationGenericOperationChannel class]) {
    ComGoodowRealtimeChannelOperationGenericOperationChannel_logger_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel class]] getName]];
  }
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)other {
  [super copyAllFieldsTo:other];
  other->backoffGenerator_ = backoffGenerator_;
  other->channel_ = channel_;
  other->delayedResyncTask_ = delayedResyncTask_;
  other->id__ = id__;
  other->isMaybeSendTaskScheduled_ = isMaybeSendTaskScheduled_;
  other->isResyncTaskScheduled_ = isResyncTaskScheduled_;
  other->listener_ = listener_;
  other->maybeSendTask_ = maybeSendTask_;
  other->queue_ = queue_;
  other->receiveListener_ = receiveListener_;
  other->retryVersion_ = retryVersion_;
  other->sessionId_ = sessionId_;
  other->state_ = state_;
  other->submitCallback_ = submitCallback_;
  other->submitService_ = submitService_;
  other->versionCallback_ = versionCallback_;
}

@end

static ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED;
static ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED;
static ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK;
static ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC;
static ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC;
IOSObjectArray *ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_values;

@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum

+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)UNINITIALISED {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED;
}
+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)ALL_ACKED {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED;
}
+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)WAITING_ACK {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK;
}
+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)DELAY_RESYNC {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC;
}
+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)WAITING_SYNC {
  return ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (void)transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:(IOSObjectArray *)validTransitionStates {
  to_ = [JavaUtilEnumSet ofWithId:ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED withJavaLangEnumArray:validTransitionStates];
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]) {
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum alloc] initWithNSString:@"UNINITIALISED" withInt:0];
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum alloc] initWithNSString:@"ALL_ACKED" withInt:1];
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum alloc] initWithNSString:@"WAITING_ACK" withInt:2];
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum alloc] initWithNSString:@"DELAY_RESYNC" withInt:3];
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC = [[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum alloc] initWithNSString:@"WAITING_SYNC" withInt:4];
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC, nil } count:5 type:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]]];
    {
[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_UNINITIALISED)) transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED } count:1 type:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]]]];
[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED)) transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK } count:1 type:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]]]];
[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK)) transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC } count:2 type:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]]]];
[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC)) transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC } count:2 type:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]]]];
[((ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *) nil_chk(ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_SYNC)) transitionsToWithComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnumArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_ALL_ACKED, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_WAITING_ACK, ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_DELAY_RESYNC } count:3 type:[IOSClass classWithClass:[ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum class]]]];
}
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_values];
}

+ (ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_values count]; i++) {
    ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum *e = ComGoodowRealtimeChannelOperationGenericOperationChannel_StateEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_$1

- (void)run {
  this$0_->isMaybeSendTaskScheduled_ = NO;
  [this$0_ maybeSend];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  this$0_ = outer$;
  return [super init];
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_$2

- (void)run {
  if (!this$0_->isResyncTaskScheduled_) {
    return;
  }
  this$0_->isResyncTaskScheduled_ = NO;
  [this$0_ doResync];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  this$0_ = outer$;
  return [super init];
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_$3

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  if (![this$0_ isConnected]) {
    return;
  }
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_Listener>) nil_chk(this$0_->listener_)) onErrorWithJavaLangThrowable:e];
}

- (void)onMessageWithInt:(int)resultingRevision
            withNSString:(NSString *)sid
                  withId:(id)operation {
  if (![this$0_ isConnected]) {
    return;
  }
  if ([((NSString *) nil_chk(this$0_->sessionId_)) isEqual:sid]) {
    [this$0_ onAckOwnOperationWithInt:resultingRevision withId:operation];
  }
  else {
    [this$0_ onIncomingOperationWithInt:resultingRevision withId:operation];
  }
  [this$0_ maybeSynced];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  this$0_ = outer$;
  return [super init];
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback

- (void)onConnectionErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  if (![this$0_ isConnected]) {
    return;
  }
  if (discarded_) {
    [((JavaUtilLoggingLogger *) nil_chk([ComGoodowRealtimeChannelOperationGenericOperationChannel logger])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"Ignoring failure, " withJavaLangThrowable:e];
    return;
  }
  discarded_ = YES;
  [((JavaUtilLoggingLogger *) nil_chk([ComGoodowRealtimeChannelOperationGenericOperationChannel logger])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel WARNING] withNSString:@"Retryable failure, will resync." withJavaLangThrowable:e];
  [this$0_ delayResync];
}

- (void)onFatalErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  [this$0_ failWithJavaLangThrowable:e];
}

- (void)onSuccessWithInt:(int)appliedRevision {
  if (![this$0_ isConnected]) {
    return;
  }
  if (discarded_) {
    [((JavaUtilLoggingLogger *) nil_chk([ComGoodowRealtimeChannelOperationGenericOperationChannel logger])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"Ignoring success @%d", appliedRevision]];
    return;
  }
  discarded_ = YES;
  [self successWithInt:appliedRevision];
}

- (void)discard {
  if (discarded_) {
    return;
  }
  discarded_ = YES;
  [((id<ComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService>) nil_chk(this$0_->submitService_)) callbackNotNeededWithComGoodowRealtimeChannelOperationGenericOperationChannel_SendOpService_Callback:self];
}

- (void)successWithInt:(int)appliedRevision {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  this$0_ = outer$;
  if (self = [super init]) {
    discarded_ = NO;
  }
  return self;
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeChannelOperationGenericOperationChannel_DiscardableCallback *)other {
  [super copyAllFieldsTo:other];
  other->discarded_ = discarded_;
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_$4

- (void)successWithInt:(int)appliedRevision {
  [((JavaUtilLoggingLogger *) nil_chk([ComGoodowRealtimeChannelOperationGenericOperationChannel logger])) logWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel INFO] withNSString:[NSString stringWithFormat:@"version callback returned @%d", appliedRevision]];
  this$1_->retryVersion_ = appliedRevision;
  [this$1_ maybeSynced];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  this$1_ = outer$;
  return [super initWithComGoodowRealtimeChannelOperationGenericOperationChannel:outer$];
}

@end
@implementation ComGoodowRealtimeChannelOperationGenericOperationChannel_$5

- (void)successWithInt:(int)appliedRevision {
  [this$1_ maybeEagerlyHandleAckWithInt:appliedRevision];
}

- (id)initWithComGoodowRealtimeChannelOperationGenericOperationChannel:(ComGoodowRealtimeChannelOperationGenericOperationChannel *)outer$ {
  this$1_ = outer$;
  return [super initWithComGoodowRealtimeChannelOperationGenericOperationChannel:outer$];
}

@end
