//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/goodow/realtime/CollaborativeObject.h"
#include "com/goodow/realtime/EventHandler.h"
#include "com/goodow/realtime/EventType.h"
#include "com/goodow/realtime/IndexReference.h"
#include "com/goodow/realtime/Model.h"
#include "com/goodow/realtime/ReferenceShiftedEvent.h"
#include "com/goodow/realtime/model/util/ModelFactory.h"
#include "com/goodow/realtime/operation/Operation.h"
#include "com/goodow/realtime/operation/create/CreateOperation.h"
#include "com/goodow/realtime/operation/cursor/ReferenceShiftedOperation.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Set.h"
#include "org/timepedia/exporter/client/Export.h"
#include "org/timepedia/exporter/client/ExportAfterCreateMethod.h"
#include "org/timepedia/exporter/client/ExportPackage.h"

@implementation GDRIndexReference

- (id)initWithGDRModel:(GDRModel *)model {
  if (self = [super initWithGDRModel:model]) {
    index_ = -1;
  }
  return self;
}

- (void)addReferenceShiftedListener:(GDRReferenceShiftedBlock)handler {
  [self addEventListenerWithGDREventTypeEnum:[GDREventTypeEnum REFERENCE_SHIFTED] withGDREventHandler:handler withBoolean:NO];
}

- (BOOL)canBeDeleted {
  return canBeDeleted__;
}

- (int)getIndex {
  return index_;
}

- (GDRCollaborativeObject *)getReferencedObject {
  return [((GDRModel *) nil_chk(model_)) getObjectWithNSString:referencedObjectId_];
}

- (void)removeReferenceShiftedListener:(GDRReferenceShiftedBlock)handler {
  [self removeEventListenerWithGDREventTypeEnum:[GDREventTypeEnum REFERENCE_SHIFTED] withGDREventHandler:handler withBoolean:NO];
}

- (void)setIndex:(int)index {
  if (index == self->index_) {
    return;
  }
  ComGoodowRealtimeOperationCursorReferenceShiftedOperation *op = [[ComGoodowRealtimeOperationCursorReferenceShiftedOperation alloc] initWithNSString:id__ withNSString:referencedObjectId_ withInt:index withBoolean:canBeDeleted__ withInt:self->index_];
  [self consumeAndSubmitWithComGoodowRealtimeOperationOperation:op];
}

- (void)consumeWithNSString:(NSString *)userId
               withNSString:(NSString *)sessionId
withComGoodowRealtimeOperationOperation:(id<ComGoodowRealtimeOperationOperation>)operation {
  ComGoodowRealtimeOperationCursorReferenceShiftedOperation *op = (ComGoodowRealtimeOperationCursorReferenceShiftedOperation *) check_class_cast(operation, [ComGoodowRealtimeOperationCursorReferenceShiftedOperation class]);
  NSAssert(((ComGoodowRealtimeOperationCursorReferenceShiftedOperation *) nil_chk(op))->oldIndex_ == [self getIndex], @"/Users/retechretech/dev/workspace/realtime/realtime-api/src/main/java/com/goodow/realtime/IndexReference.java:140 condition failed: assert op.oldIndex == getIndex();");
  GDRReferenceShiftedEvent *event = [[GDRReferenceShiftedEvent alloc] initWithGDRIndexReference:self withInt:op->oldIndex_ withInt:op->newIndex_ withNSString:sessionId withNSString:userId];
  referencedObjectId_ = op->referencedObjectId_;
  index_ = op->newIndex_;
  canBeDeleted__ = op->canBeDeleted_;
  [self fireEventWithGDRBaseModelEvent:event];
}

- (void)setIndexWithBoolean:(BOOL)isInsert
                    withInt:(int)index
                    withInt:(int)length
               withNSString:(NSString *)sessionId
               withNSString:(NSString *)userId {
  int cursor = [self getIndex];
  if (cursor < index) {
    return;
  }
  int newIndex = -2;
  if (isInsert) {
    newIndex = cursor + length;
  }
  else {
    if (cursor < index + length) {
      if (canBeDeleted__) {
        newIndex = -1;
      }
      else {
        newIndex = index;
      }
    }
    else {
      newIndex = cursor - length;
    }
  }
  ComGoodowRealtimeOperationCursorReferenceShiftedOperation *op = [[ComGoodowRealtimeOperationCursorReferenceShiftedOperation alloc] initWithNSString:id__ withNSString:referencedObjectId_ withInt:newIndex withBoolean:canBeDeleted__ withInt:cursor];
  [self consumeWithNSString:userId withNSString:sessionId withComGoodowRealtimeOperationOperation:op];
}

- (IOSObjectArray *)toInitialization {
  ComGoodowRealtimeOperationCursorReferenceShiftedOperation *op = [[ComGoodowRealtimeOperationCursorReferenceShiftedOperation alloc] initWithNSString:id__ withNSString:referencedObjectId_ withInt:index_ withBoolean:canBeDeleted__ withInt:index_];
  return [IOSObjectArray arrayWithObjects:(id[]){ [[ComGoodowRealtimeOperationCreateCreateOperation alloc] initWithNSString:id__ withInt:ComGoodowRealtimeOperationCreateCreateOperation_INDEX_REFERENCE], op } count:2 type:[IOSClass classWithProtocol:@protocol(ComGoodowRealtimeOperationOperation)]];
}

- (void)toStringWithJavaUtilSet:(id<JavaUtilSet>)seen
      withJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  if ([((id<JavaUtilSet>) nil_chk(seen)) containsWithId:id__]) {
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"<IndexReference: "])) appendWithNSString:id__])) appendWithNSString:@">"];
    return;
  }
  [seen addWithId:id__];
  (void) [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"DefaultIndexReference ["];
  (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"id="])) appendWithNSString:[self getId]];
  (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@", objectId="])) appendWithNSString:referencedObjectId_];
  (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@", index="])) appendWithInt:[self getIndex]];
  (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@", canBeDeleted="])) appendWithBoolean:canBeDeleted__];
  (void) [sb appendWithNSString:@"]"];
}

- (void)copyAllFieldsTo:(GDRIndexReference *)other {
  [super copyAllFieldsTo:other];
  other->canBeDeleted__ = canBeDeleted__;
  other->index_ = index_;
  other->referencedObjectId_ = referencedObjectId_;
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgTimepediaExporterClientExportPackageImpl alloc] initWithValue:@"good.realtime"], [[OrgTimepediaExporterClientExportImpl alloc] initWithAll:true withValue:@""] } count:2 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations___jsniRunAfter__ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgTimepediaExporterClientExportAfterCreateMethodImpl alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

@end
