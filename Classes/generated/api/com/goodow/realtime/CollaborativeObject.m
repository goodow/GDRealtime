//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/goodow/realtime/BaseModelEvent.h"
#include "com/goodow/realtime/CollaborativeObject.h"
#include "com/goodow/realtime/Document.h"
#include "com/goodow/realtime/DocumentBridge.h"
#include "com/goodow/realtime/EventHandler.h"
#include "com/goodow/realtime/EventType.h"
#include "com/goodow/realtime/Model.h"
#include "com/goodow/realtime/model/util/ModelFactory.h"
#include "com/goodow/realtime/operation/Operation.h"
#include "java/lang/StringBuilder.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "java/util/logging/Logger.h"
#include "org/timepedia/exporter/client/Export.h"
#include "org/timepedia/exporter/client/ExportPackage.h"

@implementation GDRCollaborativeObject

static JavaUtilLoggingLogger * GDRCollaborativeObject_log_;

+ (JavaUtilLoggingLogger *)log {
  return GDRCollaborativeObject_log_;
}

- (id)initWithGDRModel:(GDRModel *)model {
  if (self = [super init]) {
    self->model_ = model;
  }
  return self;
}

- (void)addEventListenerWithGDREventTypeEnum:(GDREventTypeEnum *)type
                         withGDREventHandler:(id<GDREventHandler>)handler
                                 withBoolean:(BOOL)opt_capture {
  [((GDRDocument *) nil_chk(((GDRModel *) nil_chk(model_))->document_)) addEventListenerWithNSString:id__ withGDREventTypeEnum:type withGDREventHandler:handler withBoolean:opt_capture];
}

- (void)addObjectChangedListener:(GDRObjectChangedBlock)handler {
  [self addEventListenerWithGDREventTypeEnum:[GDREventTypeEnum OBJECT_CHANGED] withGDREventHandler:handler withBoolean:NO];
}

- (NSString *)getId {
  return id__;
}

- (void)removeEventListenerWithGDREventTypeEnum:(GDREventTypeEnum *)type
                            withGDREventHandler:(id<GDREventHandler>)handler
                                    withBoolean:(BOOL)opt_capture {
  [((GDRDocument *) nil_chk(((GDRModel *) nil_chk(model_))->document_)) removeEventListenerWithNSString:id__ withGDREventTypeEnum:type withGDREventHandler:handler withBoolean:opt_capture];
}

- (void)removeObjectChangedListener:(GDRObjectChangedBlock)handler {
  [self removeEventListenerWithGDREventTypeEnum:[GDREventTypeEnum OBJECT_CHANGED] withGDREventHandler:handler withBoolean:NO];
}

- (NSString *)description {
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  [self toStringWithJavaUtilSet:[[JavaUtilHashSet alloc] init] withJavaLangStringBuilder:sb];
  return [sb description];
}

- (void)consumeWithNSString:(NSString *)userId
               withNSString:(NSString *)sessionId
withComGoodowRealtimeOperationOperation:(id<ComGoodowRealtimeOperationOperation>)operation {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)consumeAndSubmitWithComGoodowRealtimeOperationOperation:(id<ComGoodowRealtimeOperationOperation>)op {
  [((GDRDocumentBridge *) nil_chk(((GDRModel *) nil_chk(model_))->bridge_)) consumeAndSubmitWithComGoodowRealtimeOperationOperation:op];
}

- (void)fireEventWithGDRBaseModelEvent:(GDRBaseModelEvent *)event {
  [((GDRDocument *) nil_chk(((GDRModel *) nil_chk(model_))->document_)) scheduleEventWithNSString:id__ withGDREventTypeEnum:((GDRBaseModelEvent *) nil_chk(event))->type_ withGDRDisposable:event];
}

- (IOSObjectArray *)toInitialization {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)toStringWithJavaUtilSet:(id<JavaUtilSet>)seen
      withJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (void)initialize {
  if (self == [GDRCollaborativeObject class]) {
    GDRCollaborativeObject_log_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[GDRCollaborativeObject class]] getName]];
  }
}

- (void)copyAllFieldsTo:(GDRCollaborativeObject *)other {
  [super copyAllFieldsTo:other];
  other->id__ = id__;
  other->model_ = model_;
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgTimepediaExporterClientExportPackageImpl alloc] initWithValue:@"good.realtime"], [[OrgTimepediaExporterClientExportImpl alloc] initWithAll:false withValue:@""] } count:2 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

@end
