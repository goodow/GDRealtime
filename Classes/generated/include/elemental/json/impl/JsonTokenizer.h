//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#ifndef _ElementalJsonImplJsonTokenizer_H_
#define _ElementalJsonImplJsonTokenizer_H_

@class ElementalJsonImplJreJsonFactory;
@class IOSCharArray;
@protocol GDRJsonArray;
@protocol GDRJsonFactory;
@protocol GDRJsonNumber;
@protocol GDRJsonObject;
@protocol GDRJsonValue;

#import "JreEmulation.h"

#define ElementalJsonImplJsonTokenizer_DOUBLE_QUOTE '"'
#define ElementalJsonImplJsonTokenizer_INVALID_CHAR -1
#define ElementalJsonImplJsonTokenizer_SINGLE_QUOTE '\''

@interface ElementalJsonImplJsonTokenizer : NSObject {
 @public
  id<GDRJsonFactory> jsonFactory_;
  BOOL lenient_;
  int pushBackBuffer_;
  NSString *json_;
  int position_;
}

+ (NSString *)STOPCHARS;
- (id)initWithElementalJsonImplJreJsonFactory:(ElementalJsonImplJreJsonFactory *)serverJsonFactory
                                 withNSString:(NSString *)json;
- (void)backWithChar:(unichar)c;
- (void)backWithInt:(int)c;
- (int)next;
- (NSString *)nextWithInt:(int)n;
- (int)nextNonWhitespace;
- (NSString *)nextStringWithInt:(int)startChar;
- (NSString *)nextUntilOneOfWithNSString:(NSString *)chars;
- (id)nextValue;
- (id<GDRJsonArray>)parseArray;
- (id<GDRJsonObject>)parseObject;
- (id<GDRJsonNumber>)getNumberForLiteralWithNSString:(NSString *)literal;
- (id<GDRJsonValue>)getValueForLiteralWithNSString:(NSString *)literal;
- (int)readWithCharArray:(IOSCharArray *)buffer
                 withInt:(int)pos
                 withInt:(int)len;
- (void)copyAllFieldsTo:(ElementalJsonImplJsonTokenizer *)other;
@end

J2OBJC_FIELD_SETTER(ElementalJsonImplJsonTokenizer, jsonFactory_, id<GDRJsonFactory>)
J2OBJC_FIELD_SETTER(ElementalJsonImplJsonTokenizer, json_, NSString *)

#endif // _ElementalJsonImplJsonTokenizer_H_
