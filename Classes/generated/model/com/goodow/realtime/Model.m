//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/com/goodow/realtime/Model.java
//
//  Created by retechretech on 13-5-25.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/goodow/realtime/CollaborativeList.h"
#import "com/goodow/realtime/CollaborativeMap.h"
#import "com/goodow/realtime/CollaborativeObject.h"
#import "com/goodow/realtime/CollaborativeString.h"
#import "com/goodow/realtime/Document.h"
#import "com/goodow/realtime/DocumentBridge.h"
#import "com/goodow/realtime/EventHandler.h"
#import "com/goodow/realtime/EventType.h"
#import "com/goodow/realtime/IndexReference.h"
#import "com/goodow/realtime/Model.h"
#import "com/goodow/realtime/UndoRedoStateChangedEvent.h"
#import "com/goodow/realtime/id/IdGenerator.h"
#import "com/goodow/realtime/operation/CreateOperation.h"
#import "com/goodow/realtime/operation/Operation.h"
#import "com/goodow/realtime/operation/ReferenceShiftedOperation.h"
#import "com/goodow/realtime/operation/list/ArrayOp.h"
#import "com/goodow/realtime/operation/list/StringOp.h"
#import "com/goodow/realtime/operation/list/algorithm/ListOp.h"
#import "com/goodow/realtime/operation/map/MapOp.h"
#import "com/goodow/realtime/util/JsonSerializer.h"
#import "com/goodow/realtime/util/ModelFactory.h"
#import "elemental/json/Json.h"
#import "elemental/json/JsonArray.h"
#import "java/lang/UnsupportedOperationException.h"
#import "java/util/ArrayList.h"
#import "java/util/HashMap.h"
#import "java/util/Iterator.h"
#import "java/util/List.h"
#import "java/util/Map.h"
#import "java/util/Set.h"
#import "java/util/logging/Logger.h"

@implementation GDRModel

static NSString * GDRModel_ROOT_ID_ = @"root";
static NSString * GDRModel_EVENT_HANDLER_KEY_ = @"model";
static JavaUtilLoggingLogger * GDRModel_log_;

@synthesize isReadOnly_ = isReadOnly__;
@synthesize canRedo_ = canRedo__;
@synthesize canUndo_ = canUndo__;
@synthesize objects = objects_;
@synthesize indexReferences = indexReferences_;
@synthesize document = document_;
@synthesize bridge = bridge_;

+ (NSString *)ROOT_ID {
  return GDRModel_ROOT_ID_;
}

+ (NSString *)EVENT_HANDLER_KEY {
  return GDRModel_EVENT_HANDLER_KEY_;
}

+ (JavaUtilLoggingLogger *)log {
  return GDRModel_log_;
}

- (id)initWithGDRDocumentBridge:(GDRDocumentBridge *)bridge
                withGDRDocument:(GDRDocument *)document {
  if ((self = [super init])) {
    objects_ = [[JavaUtilHashMap alloc] init];
    self.bridge = bridge;
    self.document = document;
  }
  return self;
}

- (void)addEventListenerWithGDREventTypeEnum:(GDREventTypeEnum *)type
                         withGDREventHandler:(id<GDREventHandler>)handler
                                    withBOOL:(BOOL)opt_capture {
  [((GDRDocument *) NIL_CHK(document_)) addEventListenerWithNSString:GDRModel_EVENT_HANDLER_KEY_ withGDREventTypeEnum:type withGDREventHandler:handler withBOOL:opt_capture];
}

- (void)addUndoRedoStateChangedListenerWithGDREventHandler:(id<GDREventHandler>)handler {
  [self addEventListenerWithGDREventTypeEnum:[GDREventTypeEnum UNDO_REDO_STATE_CHANGED] withGDREventHandler:handler withBOOL:NO];
}

- (void)beginCompoundOperation:(NSString *)opt_name {
  [((JavaUtilLoggingLogger *) NIL_CHK(GDRModel_log_)) infoWithNSString:[NSString stringWithFormat:@"beginCompoundOperation%@", (opt_name == nil ? @"" : ([NSString stringWithFormat:@" %@", opt_name]))]];
}

- (BOOL)canRedo {
  return canRedo__;
}

- (BOOL)canUndo {
  return canUndo__;
}

- (id)createWithNSString:(NSString *)ref
       withNSObjectArray:(IOSObjectArray *)var_args {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (GDRCollaborativeList *)createListWithNSObjectArray:(IOSObjectArray *)opt_initialValue {
  ComGoodowRealtimeOperationListArrayOp *op = nil;
  if (opt_initialValue != nil && (int) [((IOSObjectArray *) NIL_CHK(opt_initialValue)) count] > 0) {
    op = [[ComGoodowRealtimeOperationListArrayOp alloc] init];
    id<EMJsonArray> array = [EMJson createArray];
    for (int i = 0, len = (int) [((IOSObjectArray *) NIL_CHK(opt_initialValue)) count]; i < len; i++) {
      id<EMJsonArray> serializedValue = [ComGoodowRealtimeUtilJsonSerializer serializeObjectWithId:[((IOSObjectArray *) NIL_CHK(opt_initialValue)) objectAtIndex:i]];
      [((id<EMJsonArray>) NIL_CHK(array)) setWithInt:i withEMJsonValue:serializedValue];
    }
    [((ComGoodowRealtimeOperationListArrayOp *) NIL_CHK(op)) insertWithId:array];
  }
  NSString *id_ = [self generateObjectId];
  [self initializeCreateWithInt:ComGoodowRealtimeOperationCreateOperation_COLLABORATIVE_LIST withComGoodowRealtimeOperationOperation:op withNSString:id_];
  return ((GDRCollaborativeList *) [self getObjectWithNSString:id_]);
}

- (GDRCollaborativeMap *)createMapWithJavaUtilMap:(id<JavaUtilMap>)opt_initialValue {
  ComGoodowRealtimeOperationMapMapOp *op = nil;
  if (opt_initialValue != nil && ![((id<JavaUtilMap>) NIL_CHK(opt_initialValue)) isEmpty]) {
    op = [[ComGoodowRealtimeOperationMapMapOp alloc] init];
    {
      id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilSet>) [((id<JavaUtilMap>) NIL_CHK(opt_initialValue)) keySet]) iterator]);
      while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
        NSString *key = ((NSString *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
        id<EMJsonArray> serializedValue = [ComGoodowRealtimeUtilJsonSerializer serializeObjectWithId:[((id<JavaUtilMap>) NIL_CHK(opt_initialValue)) getWithId:key]];
        if (serializedValue == nil) {
          continue;
        }
        [((ComGoodowRealtimeOperationMapMapOp *) NIL_CHK(op)) updateWithNSString:key withEMJsonValue:nil withEMJsonValue:serializedValue];
      }
    }
  }
  NSString *id_ = [self generateObjectId];
  [self initializeCreateWithInt:ComGoodowRealtimeOperationCreateOperation_COLLABORATIVE_MAP withComGoodowRealtimeOperationOperation:op withNSString:id_];
  return ((GDRCollaborativeMap *) [self getObjectWithNSString:id_]);
}

- (GDRCollaborativeString *)createString:(NSString *)opt_initialValue {
  ComGoodowRealtimeOperationListAlgorithmListOp *op = nil;
  if (opt_initialValue != nil && ![NIL_CHK(opt_initialValue) isEmpty]) {
    op = ((ComGoodowRealtimeOperationListAlgorithmListOp *) [[[ComGoodowRealtimeOperationListStringOp alloc] init] insertWithId:opt_initialValue]);
  }
  NSString *id_ = [self generateObjectId];
  [self initializeCreateWithInt:ComGoodowRealtimeOperationCreateOperation_COLLABORATIVE_STRING withComGoodowRealtimeOperationOperation:op withNSString:id_];
  return ((GDRCollaborativeString *) [self getObjectWithNSString:id_]);
}

- (void)endCompoundOperation {
  [((JavaUtilLoggingLogger *) NIL_CHK(GDRModel_log_)) infoWithNSString:@"endCompoundOperation"];
}

- (GDRCollaborativeMap *)getRoot {
  return ((GDRCollaborativeMap *) [self getObjectWithNSString:GDRModel_ROOT_ID_]);
}

- (BOOL)isInitialized {
  return NO;
}

- (BOOL)isReadOnly {
  return isReadOnly__;
}

- (void)redo {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)removeEventListenerWithGDREventTypeEnum:(GDREventTypeEnum *)type
                            withGDREventHandler:(id<GDREventHandler>)handler
                                       withBOOL:(BOOL)opt_capture {
  [((GDRDocument *) NIL_CHK(document_)) removeEventListenerWithNSString:GDRModel_EVENT_HANDLER_KEY_ withGDREventTypeEnum:type withGDREventHandler:handler withBOOL:opt_capture];
}

- (void)undo {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)beginCreationCompoundOperation {
  [self beginCompoundOperation:@"initialize"];
}

- (GDRIndexReference *)createIndexReferenceWithNSString:(NSString *)referencedObject
                                                withInt:(int)index
                                               withBOOL:(BOOL)canBeDeleted {
  ComGoodowRealtimeOperationReferenceShiftedOperation *op = [[ComGoodowRealtimeOperationReferenceShiftedOperation alloc] initWithNSString:referencedObject withInt:index withBOOL:canBeDeleted withInt:-1];
  NSString *id_ = [self generateObjectId];
  [self initializeCreateWithInt:ComGoodowRealtimeOperationCreateOperation_INDEX_REFERENCE withComGoodowRealtimeOperationOperation:op withNSString:id_];
  [self registerIndexReferenceWithNSString:id_ withNSString:referencedObject];
  return ((GDRIndexReference *) [self getObjectWithNSString:id_]);
}

- (void)createRoot {
  [self initializeCreateWithInt:ComGoodowRealtimeOperationCreateOperation_COLLABORATIVE_MAP withComGoodowRealtimeOperationOperation:nil withNSString:GDRModel_ROOT_ID_];
}

- (GDRCollaborativeObject *)getObjectWithNSString:(NSString *)objectId {
  return (GDRCollaborativeObject *) ((GDRCollaborativeObject *) [((id<JavaUtilMap>) NIL_CHK(objects_)) getWithId:objectId]);
}

- (void)setIndexReferenceIndexWithNSString:(NSString *)referencedObject
                                  withBOOL:(BOOL)isInsert
                                   withInt:(int)index
                                   withInt:(int)length
                              withNSString:(NSString *)sessionId
                              withNSString:(NSString *)userId {
  if (indexReferences_ == nil) {
    return;
  }
  id<JavaUtilList> list = ((id<JavaUtilList>) [((id<JavaUtilMap>) NIL_CHK(indexReferences_)) getWithId:referencedObject]);
  if (list != nil) {
    {
      id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [list iterator]);
      while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
        NSString *indexReferenceId = ((NSString *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
        GDRIndexReference *indexReference = ((GDRIndexReference *) [self getObjectWithNSString:indexReferenceId]);
        [((GDRIndexReference *) NIL_CHK(indexReference)) setIndexWithBOOL:isInsert withInt:index withInt:length withNSString:sessionId withNSString:userId];
      }
    }
  }
}

- (NSString *)generateObjectId {
  return [NSString stringWithFormat:@"gde%@", [((ComGoodowRealtimeIdIdGenerator *) [[ComGoodowRealtimeIdIdGenerator alloc] init]) nextWithInt:14]];
}

- (void)initializeCreateWithInt:(int)type
withComGoodowRealtimeOperationOperation:(id<ComGoodowRealtimeOperationOperation>)opt_initialValue
                   withNSString:(NSString *)id_ OBJC_METHOD_FAMILY_NONE {
  [self beginCreationCompoundOperation];
  ComGoodowRealtimeOperationCreateOperation *op = [[ComGoodowRealtimeOperationCreateOperation alloc] initWithInt:type withNSString:id_];
  [((GDRDocumentBridge *) NIL_CHK(bridge_)) consumeAndSubmitWithComGoodowRealtimeOperationOperation:op];
  if (opt_initialValue != nil) {
    [opt_initialValue setIdWithNSString:id_];
    [((GDRDocumentBridge *) NIL_CHK(bridge_)) consumeAndSubmitWithComGoodowRealtimeOperationOperation:opt_initialValue];
  }
  [self endCompoundOperation];
}

- (void)registerIndexReferenceWithNSString:(NSString *)indexReference
                              withNSString:(NSString *)referencedObject {
  if (indexReferences_ == nil) {
    indexReferences_ = [[JavaUtilHashMap alloc] init];
  }
  id<JavaUtilList> list = ((id<JavaUtilList>) [((id<JavaUtilMap>) NIL_CHK(indexReferences_)) getWithId:referencedObject]);
  if (list == nil) {
    list = [[JavaUtilArrayList alloc] init];
    [((id<JavaUtilMap>) NIL_CHK(indexReferences_)) putWithId:referencedObject withId:list];
  }
  [((id<JavaUtilList>) NIL_CHK(list)) addWithId:indexReference];
}

+ (void)initialize {
  if (self == [GDRModel class]) {
    GDRModel_log_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[GDRModel class]] getName]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  GDRModel *typedCopy = (GDRModel *) copy;
  typedCopy.isReadOnly_ = isReadOnly__;
  typedCopy.canRedo_ = canRedo__;
  typedCopy.canUndo_ = canUndo__;
  typedCopy.objects = objects_;
  typedCopy.indexReferences = indexReferences_;
  typedCopy.document = document_;
  typedCopy.bridge = bridge_;
}

@end
