//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/com/goodow/realtime/CollaborativeString.java
//
//  Created by retechretech on 13-5-25.
//

#import "IOSObjectArray.h"
#import "com/goodow/realtime/CollaborativeObject.h"
#import "com/goodow/realtime/CollaborativeString.h"
#import "com/goodow/realtime/EventHandler.h"
#import "com/goodow/realtime/EventType.h"
#import "com/goodow/realtime/IndexReference.h"
#import "com/goodow/realtime/Model.h"
#import "com/goodow/realtime/TextDeletedEvent.h"
#import "com/goodow/realtime/TextInsertedEvent.h"
#import "com/goodow/realtime/operation/CreateOperation.h"
#import "com/goodow/realtime/operation/Operation.h"
#import "com/goodow/realtime/operation/RealtimeOperation.h"
#import "com/goodow/realtime/operation/list/StringOp.h"
#import "com/goodow/realtime/operation/list/algorithm/ListOp.h"
#import "com/goodow/realtime/operation/list/algorithm/ListTarget.h"
#import "com/goodow/realtime/util/ModelFactory.h"
#import "com/goodow/realtime/util/ModelNative.h"
#import "java/lang/IllegalArgumentException.h"
#import "java/lang/StringBuilder.h"
#import "java/lang/StringIndexOutOfBoundsException.h"
#import "java/util/Set.h"

@implementation GDRCollaborativeString

@synthesize snapshot = snapshot_;

- (id)initWithGDRModel:(GDRModel *)model {
  if ((self = [super initWithGDRModel:model])) {
    snapshot_ = [[JavaLangStringBuilder alloc] init];
  }
  return self;
}

- (void)addTextDeletedListenerWithGDREventHandler:(id<GDREventHandler>)handler {
  [self addEventListenerWithGDREventTypeEnum:[GDREventTypeEnum TEXT_DELETED] withGDREventHandler:handler withBOOL:NO];
}

- (void)addTextInsertedListenerWithGDREventHandler:(id<GDREventHandler>)handler {
  [self addEventListenerWithGDREventTypeEnum:[GDREventTypeEnum TEXT_INSERTED] withGDREventHandler:handler withBOOL:NO];
}

- (void)append:(NSString *)text {
  [self insertString:[self length] text:text];
}

- (NSString *)getText {
  return [((JavaLangStringBuilder *) NIL_CHK(snapshot_)) description];
}

- (void)insertString:(int)index text:(NSString *)text {
  if (text == nil || [NIL_CHK(text) isEmpty]) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"At least one value must be specified for an insert mutation. text: %@", text]];
  }
  [self checkIndexWithInt:index];
  ComGoodowRealtimeOperationListStringOp *op = [[ComGoodowRealtimeOperationListStringOp alloc] initWithBOOL:YES withInt:index withId:text withInt:[self length]];
  [self consumeAndSubmitWithComGoodowRealtimeOperationOperation:op];
}

- (int)length {
  return [((JavaLangStringBuilder *) NIL_CHK(snapshot_)) sequenceLength];
}

- (GDRIndexReference *)registerReference:(int)index canBeDeleted:(BOOL)canBeDeleted {
  [self checkIndexWithInt:index];
  return [((GDRModel *) NIL_CHK(model_)) createIndexReferenceWithNSString:id__ withInt:index withBOOL:canBeDeleted];
}

- (void)removeRangeFrom:(int)startIndex to:(int)endIndex {
  int length = [self length];
  if (startIndex < 0 || startIndex >= length || endIndex <= startIndex || endIndex > length) {
    @throw [[JavaLangStringIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"StartIndex: %d, EndIndex: %d, Size: %d", startIndex, endIndex, length]];
  }
  ComGoodowRealtimeOperationListStringOp *op = [[ComGoodowRealtimeOperationListStringOp alloc] initWithBOOL:NO withInt:startIndex withId:[((JavaLangStringBuilder *) NIL_CHK(snapshot_)) substringWithInt:startIndex withInt:endIndex] withInt:length];
  [self consumeAndSubmitWithComGoodowRealtimeOperationOperation:op];
}

- (void)removeStringListenerWithGDREventHandler:(id<GDREventHandler>)handler {
  [self removeEventListenerWithGDREventTypeEnum:[GDREventTypeEnum TEXT_INSERTED] withGDREventHandler:handler withBOOL:NO];
  [self removeEventListenerWithGDREventTypeEnum:[GDREventTypeEnum TEXT_DELETED] withGDREventHandler:handler withBOOL:NO];
}

- (void)setText:(NSString *)text {
  if (text == nil) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Expected string for text, but was: null"];
  }
  [((GDRModel *) NIL_CHK(model_)) beginCompoundOperation:@"replaceText"];
  [((id<ComGoodowRealtimeUtilModelFactory>) [ComGoodowRealtimeUtilModelNative get]) setTextWithGDRCollaborativeString:self withNSString:text];
  [((GDRModel *) NIL_CHK(model_)) endCompoundOperation];
}

- (void)consumeWithComGoodowRealtimeOperationRealtimeOperation:(ComGoodowRealtimeOperationRealtimeOperation *)operation {
  [((id<ComGoodowRealtimeOperationOperation>) ((id<ComGoodowRealtimeOperationOperation>) [((ComGoodowRealtimeOperationRealtimeOperation *) NIL_CHK(operation)) getOp])) applyWithId:[[GDRCollaborativeString_$1 alloc] initWithGDRCollaborativeString:self withComGoodowRealtimeOperationRealtimeOperation:operation]];
}

- (IOSObjectArray *)toInitialization {
  ComGoodowRealtimeOperationListAlgorithmListOp *op = nil;
  if ([self length] != 0) {
    op = ((ComGoodowRealtimeOperationListAlgorithmListOp *) [[[ComGoodowRealtimeOperationListStringOp alloc] init] insertWithId:[self getText]]);
  }
  return [IOSObjectArray arrayWithObjects:(id[]){ [[ComGoodowRealtimeOperationCreateOperation alloc] initWithInt:ComGoodowRealtimeOperationCreateOperation_COLLABORATIVE_STRING withNSString:id__], op } count:2 type:[IOSClass classWithProtocol:@protocol(ComGoodowRealtimeOperationOperation)]];
}

- (void)toStringWithJavaUtilSet:(id<JavaUtilSet>)seen
      withJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  if ([((id<JavaUtilSet>) NIL_CHK(seen)) containsWithId:id__]) {
    [[[((JavaLangStringBuilder *) NIL_CHK(sb)) appendWithNSString:@"<EditableString: "] appendWithNSString:id__] appendWithNSString:@">"];
    return;
  }
  [((id<JavaUtilSet>) NIL_CHK(seen)) addWithId:id__];
  [((JavaLangStringBuilder *) NIL_CHK(sb)) appendWithNSString:[self getText]];
}

- (void)checkIndexWithInt:(int)index {
  int length = [self length];
  if (index < 0 || index > length) {
    @throw [[JavaLangStringIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"Index: %d, Size: %d", index, length]];
  }
}

- (void)deleteAndFireEventWithInt:(int)startIndex
                          withInt:(int)endIndex
                     withNSString:(NSString *)sessionId
                     withNSString:(NSString *)userId {
  NSAssert(startIndex < endIndex && endIndex <= [self length], @"src/main/java/com/goodow/realtime/CollaborativeString.java:240 condition failed: assert startIndex < endIndex && endIndex <= length();");
  NSString *toDelete = [((JavaLangStringBuilder *) NIL_CHK(snapshot_)) substringWithInt:startIndex withInt:endIndex];
  GDRTextDeletedEvent *event = [[GDRTextDeletedEvent alloc] initWithGDRCollaborativeString:self withNSString:sessionId withNSString:userId withInt:startIndex withNSString:toDelete];
  [((JavaLangStringBuilder *) NIL_CHK(snapshot_)) delete__WithInt:startIndex withInt:endIndex];
  [self fireEventWithGDRBaseModelEvent:event];
  [((GDRModel *) NIL_CHK(model_)) setIndexReferenceIndexWithNSString:id__ withBOOL:NO withInt:startIndex withInt:endIndex - startIndex withNSString:sessionId withNSString:userId];
}

- (void)insertAndFireEventWithInt:(int)index
                     withNSString:(NSString *)text
                     withNSString:(NSString *)sessionId
                     withNSString:(NSString *)userId {
  NSAssert(index <= [self length], @"src/main/java/com/goodow/realtime/CollaborativeString.java:249 condition failed: assert index <= length();");
  GDRTextInsertedEvent *event = [[GDRTextInsertedEvent alloc] initWithGDRCollaborativeString:self withNSString:sessionId withNSString:userId withInt:index withNSString:text];
  [((JavaLangStringBuilder *) NIL_CHK(snapshot_)) insertWithInt:index withNSString:text];
  [self fireEventWithGDRBaseModelEvent:event];
  [((GDRModel *) NIL_CHK(model_)) setIndexReferenceIndexWithNSString:id__ withBOOL:YES withInt:index withInt:[NIL_CHK(text) length] withNSString:sessionId withNSString:userId];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  GDRCollaborativeString *typedCopy = (GDRCollaborativeString *) copy;
  typedCopy.snapshot = snapshot_;
}

@end
@implementation GDRCollaborativeString_$1

@synthesize this$0 = this$0_;
@synthesize cursor = cursor_;
@synthesize val$operation = val$operation_;

- (id<ComGoodowRealtimeOperationListAlgorithmListTarget>)delete__WithId:(NSString *)str {
  NSAssert([[((JavaLangStringBuilder *) NIL_CHK(this$0_.snapshot)) substringWithInt:cursor_ withInt:cursor_ + [NIL_CHK(str) length]] isEqual:str], @"src/main/java/com/goodow/realtime/CollaborativeString.java:192 condition failed: assert snapshot.substring(cursor, cursor + str.length()).equals(str);");
  [this$0_ deleteAndFireEventWithInt:cursor_ withInt:cursor_ + [NIL_CHK(str) length] withNSString:((ComGoodowRealtimeOperationRealtimeOperation *) NIL_CHK(val$operation_)).sessionId withNSString:((ComGoodowRealtimeOperationRealtimeOperation *) NIL_CHK(val$operation_)).userId];
  return nil;
}

- (id<ComGoodowRealtimeOperationListAlgorithmListTarget>)insertWithId:(NSString *)str {
  [this$0_ insertAndFireEventWithInt:cursor_ withNSString:str withNSString:((ComGoodowRealtimeOperationRealtimeOperation *) NIL_CHK(val$operation_)).sessionId withNSString:((ComGoodowRealtimeOperationRealtimeOperation *) NIL_CHK(val$operation_)).userId];
  cursor_ += [NIL_CHK(str) length];
  return nil;
}

- (id<ComGoodowRealtimeOperationListAlgorithmListTarget>)retain__WithInt:(int)length {
  cursor_ += length;
  return nil;
}

- (id)initWithGDRCollaborativeString:(GDRCollaborativeString *)outer$
withComGoodowRealtimeOperationRealtimeOperation:(ComGoodowRealtimeOperationRealtimeOperation *)capture$0 {
  if ((self = [super init])) {
    this$0_ = outer$;
    val$operation_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  GDRCollaborativeString_$1 *typedCopy = (GDRCollaborativeString_$1 *) copy;
  typedCopy.this$0 = this$0_;
  typedCopy.cursor = cursor_;
  typedCopy.val$operation = val$operation_;
}

@end
