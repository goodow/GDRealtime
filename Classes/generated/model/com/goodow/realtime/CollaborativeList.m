//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/com/goodow/realtime/CollaborativeList.java
//
//  Created by retechretech on 13-5-25.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/goodow/realtime/CollaborativeList.h"
#import "com/goodow/realtime/CollaborativeObject.h"
#import "com/goodow/realtime/Document.h"
#import "com/goodow/realtime/EventHandler.h"
#import "com/goodow/realtime/EventType.h"
#import "com/goodow/realtime/IndexReference.h"
#import "com/goodow/realtime/Model.h"
#import "com/goodow/realtime/ValuesAddedEvent.h"
#import "com/goodow/realtime/ValuesRemovedEvent.h"
#import "com/goodow/realtime/ValuesSetEvent.h"
#import "com/goodow/realtime/operation/CreateOperation.h"
#import "com/goodow/realtime/operation/Operation.h"
#import "com/goodow/realtime/operation/RealtimeOperation.h"
#import "com/goodow/realtime/operation/list/ArrayOp.h"
#import "com/goodow/realtime/operation/list/algorithm/ListOp.h"
#import "com/goodow/realtime/operation/list/algorithm/ListTarget.h"
#import "com/goodow/realtime/util/JsonSerializer.h"
#import "com/goodow/realtime/util/ModelFactory.h"
#import "elemental/json/Json.h"
#import "elemental/json/JsonArray.h"
#import "elemental/json/JsonValue.h"
#import "java/lang/ArrayIndexOutOfBoundsException.h"
#import "java/lang/ClassCastException.h"
#import "java/lang/StringBuilder.h"
#import "java/util/Comparator.h"
#import "java/util/Map.h"
#import "java/util/Set.h"

@implementation GDRCollaborativeList

@synthesize snapshot = snapshot_;

- (id)initWithGDRModel:(GDRModel *)model {
  if ((self = [super initWithGDRModel:model])) {
    snapshot_ = [EMJson createArray];
  }
  return self;
}

- (void)addValuesAddedListenerWithGDREventHandler:(id<GDREventHandler>)handler {
  [self addEventListenerWithGDREventTypeEnum:[GDREventTypeEnum VALUES_ADDED] withGDREventHandler:handler withBOOL:NO];
}

- (void)addValuesRemovedListenerWithGDREventHandler:(id<GDREventHandler>)handler {
  [self addEventListenerWithGDREventTypeEnum:[GDREventTypeEnum VALUES_REMOVED] withGDREventHandler:handler withBOOL:NO];
}

- (void)addValuesSetListenerWithGDREventHandler:(id<GDREventHandler>)handler {
  [self addEventListenerWithGDREventTypeEnum:[GDREventTypeEnum VALUES_SET] withGDREventHandler:handler withBOOL:NO];
}

- (IOSObjectArray *)__asArray {
  int length = [self length];
  IOSObjectArray *objects = [[IOSObjectArray alloc] initWithLength:length type:[IOSClass classWithClass:[NSObject class]]];
  for (int i = 0; i < length; i++) {
    [((IOSObjectArray *) NIL_CHK(objects)) replaceObjectAtIndex:i withObject:[self get:i]];
  }
  return objects;
}

- (void)clear {
  [self removeRangeFrom:0 to:[self length]];
}

- (id)get:(int)index {
  [self checkIndexWithInt:index withBOOL:NO];
  return (id) [ComGoodowRealtimeUtilJsonSerializer deserializeObjectWithEMJsonValue:[((id<EMJsonArray>) NIL_CHK(snapshot_)) getWithInt:index] withJavaUtilMap:((GDRModel *) NIL_CHK(model_)).objects];
}

- (int)indexOfWithId:(id)value
withJavaUtilComparator:(id<JavaUtilComparator>)opt_comparator {
  if (opt_comparator == nil) {
    id<EMJsonArray> serializedValue;
    @try {
      serializedValue = [ComGoodowRealtimeUtilJsonSerializer serializeObjectWithId:value];
    }
    @catch (JavaLangClassCastException *e) {
      return -1;
    }
    for (int i = 0, len = [self length]; i < len; i++) {
      if ([ComGoodowRealtimeUtilJsonSerializer jsonEqualWithEMJsonValue:serializedValue withEMJsonValue:[((id<EMJsonArray>) NIL_CHK(snapshot_)) getWithInt:i]]) {
        return i;
      }
    }
  }
  else {
    for (int i = 0, len = [self length]; i < len; i++) {
      if ([self compareWithJavaUtilComparator:opt_comparator withId:value withId:[self get:i]] == 0) {
        return i;
      }
    }
  }
  return -1;
}

- (void)insert:(int)index value:(id)value {
  [self insertAllWithInt:index withNSObjectArray:[IOSObjectArray arrayWithType:[IOSClass classWithClass:[NSObject class]] count:1, value ]];
}

- (void)insertAllWithInt:(int)index
       withNSObjectArray:(IOSObjectArray *)values {
  [self checkIndexWithInt:index withBOOL:YES];
  id<EMJsonArray> array = [EMJson createArray];
  if (values == nil) {
    [((id<EMJsonArray>) NIL_CHK(array)) setWithInt:0 withEMJsonValue:(id<EMJsonValue>) nil];
  }
  else if ((int) [values count] == 0) {
    return;
  }
  else {
    for (int i = 0, len = (int) [values count]; i < len; i++) {
      [((id<EMJsonArray>) NIL_CHK(array)) setWithInt:i withEMJsonValue:[ComGoodowRealtimeUtilJsonSerializer serializeObjectWithId:[values objectAtIndex:i]]];
    }
  }
  ComGoodowRealtimeOperationListArrayOp *op = [[ComGoodowRealtimeOperationListArrayOp alloc] initWithBOOL:YES withInt:index withId:array withInt:[self length]];
  [self consumeAndSubmitWithComGoodowRealtimeOperationOperation:op];
}

- (int)lastIndexOfWithId:(id)value
  withJavaUtilComparator:(id<JavaUtilComparator>)opt_comparator {
  if (opt_comparator == nil) {
    id<EMJsonArray> serializedValue;
    @try {
      serializedValue = [ComGoodowRealtimeUtilJsonSerializer serializeObjectWithId:value];
    }
    @catch (JavaLangClassCastException *e) {
      return -1;
    }
    for (int i = [self length] - 1; i >= 0; i--) {
      if ([ComGoodowRealtimeUtilJsonSerializer jsonEqualWithEMJsonValue:serializedValue withEMJsonValue:[((id<EMJsonArray>) NIL_CHK(snapshot_)) getWithInt:i]]) {
        return i;
      }
    }
  }
  else {
    for (int i = [self length] - 1; i >= 0; i--) {
      if ([self compareWithJavaUtilComparator:opt_comparator withId:value withId:[self get:i]] == 0) {
        return i;
      }
    }
  }
  return -1;
}

- (int)length {
  return [((id<EMJsonArray>) NIL_CHK(snapshot_)) length];
}

- (int)push:(id)value {
  [self insert:[self length] value:value];
  return [self length];
}

- (void)pushAllWithNSObjectArray:(IOSObjectArray *)values {
  [self insertAllWithInt:[self length] withNSObjectArray:values];
}

- (GDRIndexReference *)registerReference:(int)index canBeDeleted:(BOOL)canBeDeleted {
  [self checkIndexWithInt:index withBOOL:YES];
  return [((GDRModel *) NIL_CHK(model_)) createIndexReferenceWithNSString:id__ withInt:index withBOOL:canBeDeleted];
}

- (void)remove:(int)index {
  [self removeRangeFrom:index to:index + 1];
}

- (void)removeListListenerWithGDREventHandler:(id<GDREventHandler>)handler {
  [self removeEventListenerWithGDREventTypeEnum:[GDREventTypeEnum VALUES_ADDED] withGDREventHandler:handler withBOOL:NO];
  [self removeEventListenerWithGDREventTypeEnum:[GDREventTypeEnum VALUES_REMOVED] withGDREventHandler:handler withBOOL:NO];
  [self removeEventListenerWithGDREventTypeEnum:[GDREventTypeEnum VALUES_SET] withGDREventHandler:handler withBOOL:NO];
}

- (void)removeRangeFrom:(int)startIndex to:(int)endIndex {
  int length = [self length];
  if (startIndex < 0 || startIndex >= length || endIndex <= startIndex || endIndex > length) {
    @throw [[JavaLangArrayIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"StartIndex: %d, EndIndex: %d, Size: %d", startIndex, endIndex, length]];
  }
  id<EMJsonArray> array = [EMJson createArray];
  for (int i = startIndex; i < endIndex; i++) {
    [((id<EMJsonArray>) NIL_CHK(array)) setWithInt:i - startIndex withEMJsonValue:[((id<EMJsonArray>) NIL_CHK(snapshot_)) getWithInt:i]];
  }
  ComGoodowRealtimeOperationListArrayOp *op = [[ComGoodowRealtimeOperationListArrayOp alloc] initWithBOOL:NO withInt:startIndex withId:array withInt:length];
  [self consumeAndSubmitWithComGoodowRealtimeOperationOperation:op];
}

- (BOOL)removeValue:(id)value {
  int index = [self indexOfWithId:value withJavaUtilComparator:nil];
  if (index == -1) {
    return NO;
  }
  [self remove:index];
  return YES;
}

- (void)replaceRangeWithInt:(int)index
          withNSObjectArray:(IOSObjectArray *)values {
  [((GDRModel *) NIL_CHK(model_)) beginCompoundOperation:@"list.replaceRange"];
  int endIndex = index + (int) [((IOSObjectArray *) NIL_CHK(values)) count];
  int length = [self length];
  [self removeRangeFrom:index to:endIndex > length ? length : endIndex];
  [self insertAllWithInt:index withNSObjectArray:values];
  [((GDRModel *) NIL_CHK(model_)) endCompoundOperation];
}

- (void)set:(int)index value:(id)value {
  [self checkIndexWithInt:index withBOOL:NO];
  [((GDRModel *) NIL_CHK(model_)) beginCompoundOperation:@"list.set"];
  [self remove:index];
  [self insert:index value:value];
  [((GDRModel *) NIL_CHK(model_)) endCompoundOperation];
}

- (void)setLength:(int)length {
  [self checkIndexWithInt:length withBOOL:YES];
  int len = [self length];
  if (length == len) {
    return;
  }
  [self removeRangeFrom:length to:len];
}

- (void)consumeWithComGoodowRealtimeOperationRealtimeOperation:(ComGoodowRealtimeOperationRealtimeOperation *)operation {
  [((id<ComGoodowRealtimeOperationOperation>) ((id<ComGoodowRealtimeOperationOperation>) [((ComGoodowRealtimeOperationRealtimeOperation *) NIL_CHK(operation)) getOp])) applyWithId:[[GDRCollaborativeList_$1 alloc] initWithGDRCollaborativeList:self withComGoodowRealtimeOperationRealtimeOperation:operation]];
}

- (IOSObjectArray *)toInitialization {
  ComGoodowRealtimeOperationListArrayOp *op = nil;
  if ([self length] != 0) {
    op = [[ComGoodowRealtimeOperationListArrayOp alloc] init];
    [((ComGoodowRealtimeOperationListArrayOp *) NIL_CHK(op)) insertWithId:snapshot_];
  }
  return [IOSObjectArray arrayWithObjects:(id[]){ [[ComGoodowRealtimeOperationCreateOperation alloc] initWithInt:ComGoodowRealtimeOperationCreateOperation_COLLABORATIVE_LIST withNSString:id__], op } count:2 type:[IOSClass classWithProtocol:@protocol(ComGoodowRealtimeOperationOperation)]];
}

- (void)toStringWithJavaUtilSet:(id<JavaUtilSet>)seen
      withJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  if ([((id<JavaUtilSet>) NIL_CHK(seen)) containsWithId:id__]) {
    [[[((JavaLangStringBuilder *) NIL_CHK(sb)) appendWithNSString:@"<List: "] appendWithNSString:id__] appendWithNSString:@">"];
    return;
  }
  [((id<JavaUtilSet>) NIL_CHK(seen)) addWithId:id__];
  [((JavaLangStringBuilder *) NIL_CHK(sb)) appendWithNSString:@"["];
  BOOL isFirst = YES;
  for (int i = 0, len = [self length]; i < len; i++) {
    if (!isFirst) {
      [((JavaLangStringBuilder *) NIL_CHK(sb)) appendWithNSString:@", "];
    }
    isFirst = NO;
    id value = [self get:i];
    if (value == nil) {
      [((JavaLangStringBuilder *) NIL_CHK(sb)) appendWithNSString:@"null"];
    }
    else if ([value isKindOfClass:[GDRCollaborativeObject class]]) {
      GDRCollaborativeObject *obj = (GDRCollaborativeObject *) value;
      [((GDRCollaborativeObject *) NIL_CHK(obj)) toStringWithJavaUtilSet:seen withJavaLangStringBuilder:sb];
    }
    else {
      [((JavaLangStringBuilder *) NIL_CHK(sb)) appendWithNSString:[NSString stringWithFormat:@"[JsonValue %@]", [((id<EMJsonValue>) [((id<EMJsonArray>) [((id<EMJsonArray>) NIL_CHK(snapshot_)) getArrayWithInt:i]) getWithInt:1]) toJson]]];
    }
  }
  [((JavaLangStringBuilder *) NIL_CHK(sb)) appendWithNSString:@"]"];
}

- (int)__ocniCompare__WithId:(id)comparator
                      withId:(id)object1
                      withId:(id)object2   {
    NSComparator block = (NSComparator)comparator;
    return block(object1, object2);
  }

- (void)checkIndexWithInt:(int)index
                 withBOOL:(BOOL)endBoundIsValid {
  int length = [self length];
  if (index < 0 || (endBoundIsValid ? index > length : index >= length)) {
    @throw [[JavaLangArrayIndexOutOfBoundsException alloc] initWithNSString:[NSString stringWithFormat:@"Index: %d, Size: %d", index, length]];
  }
}

- (int)compareWithJavaUtilComparator:(id<JavaUtilComparator>)comparator
                              withId:(id)object1
                              withId:(id)object2 {
  if ([(id) comparator conformsToProtocol: @protocol(JavaUtilComparator)]) {
    return [((id<JavaUtilComparator>) NIL_CHK(comparator)) compareWithId:object1 withId:object2];
  }
  else {
    return [self __ocniCompare__WithId:comparator withId:object1 withId:object2];
  }
}

- (void)insertAndFireEventWithInt:(int)index
                  withEMJsonArray:(id<EMJsonArray>)array
                     withNSString:(NSString *)sessionId
                     withNSString:(NSString *)userId {
  int length = [((id<EMJsonArray>) NIL_CHK(array)) length];
  IOSObjectArray *objects = [[IOSObjectArray alloc] initWithLength:length type:[IOSClass classWithClass:[NSObject class]]];
  for (int i = 0; i < length; i++) {
    id<EMJsonValue> value = [((id<EMJsonArray>) NIL_CHK(array)) getWithInt:i];
    [((IOSObjectArray *) NIL_CHK(objects)) replaceObjectAtIndex:i withObject:[ComGoodowRealtimeUtilJsonSerializer deserializeObjectWithEMJsonValue:value withJavaUtilMap:((GDRModel *) NIL_CHK(model_)).objects]];
    [((id<EMJsonArray>) NIL_CHK(snapshot_)) insertWithInt:index + i withEMJsonValue:value];
    [((GDRDocument *) NIL_CHK(model_.document)) addOrRemoveParentWithEMJsonValue:value withNSString:id__ withBOOL:YES];
  }
  GDRValuesAddedEvent *event = [[GDRValuesAddedEvent alloc] initWithGDRCollaborativeList:self withNSString:sessionId withNSString:userId withInt:index withNSObjectArray:objects];
  [self fireEventWithGDRBaseModelEvent:event];
  [((GDRModel *) NIL_CHK(model_)) setIndexReferenceIndexWithNSString:id__ withBOOL:YES withInt:index withInt:length withNSString:sessionId withNSString:userId];
}

- (void)removeAndFireEventWithInt:(int)index
                  withEMJsonArray:(id<EMJsonArray>)array
                     withNSString:(NSString *)sessionId
                     withNSString:(NSString *)userId {
  int length = [((id<EMJsonArray>) NIL_CHK(array)) length];
  IOSObjectArray *objects = [[IOSObjectArray alloc] initWithLength:length type:[IOSClass classWithClass:[NSObject class]]];
  for (int i = 0; i < length; i++) {
    NSAssert([ComGoodowRealtimeUtilJsonSerializer jsonEqualWithEMJsonValue:[((id<EMJsonArray>) NIL_CHK(snapshot_)) getWithInt:index] withEMJsonValue:[((id<EMJsonArray>) NIL_CHK(array)) getWithInt:i]], @"src/main/java/com/goodow/realtime/CollaborativeList.java:552 condition failed: assert JsonSerializer.jsonEqual(snapshot.get(index), array.get(i));");
    [((IOSObjectArray *) NIL_CHK(objects)) replaceObjectAtIndex:i withObject:[self get:index]];
    [((id<EMJsonArray>) NIL_CHK(snapshot_)) removeWithInt:index];
    [((GDRDocument *) NIL_CHK(model_.document)) addOrRemoveParentWithEMJsonValue:[((id<EMJsonArray>) NIL_CHK(array)) getWithInt:i] withNSString:id__ withBOOL:NO];
  }
  GDRValuesRemovedEvent *event = [[GDRValuesRemovedEvent alloc] initWithGDRCollaborativeList:self withNSString:sessionId withNSString:userId withInt:index withNSObjectArray:objects];
  [self fireEventWithGDRBaseModelEvent:event];
  [((GDRModel *) NIL_CHK(model_)) setIndexReferenceIndexWithNSString:id__ withBOOL:NO withInt:index withInt:length withNSString:sessionId withNSString:userId];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  GDRCollaborativeList *typedCopy = (GDRCollaborativeList *) copy;
  typedCopy.snapshot = snapshot_;
}

@end
@implementation GDRCollaborativeList_$1

@synthesize this$0 = this$0_;
@synthesize cursor = cursor_;
@synthesize val$operation = val$operation_;

- (id<ComGoodowRealtimeOperationListAlgorithmListTarget>)delete__WithId:(id<EMJsonArray>)list {
  NSAssert([((id<EMJsonArray>) NIL_CHK(list)) length] > 0, @"src/main/java/com/goodow/realtime/CollaborativeList.java:450 condition failed: assert list.length() > 0;");
  NSAssert(cursor_ + [((id<EMJsonArray>) NIL_CHK(list)) length] <= [this$0_ length], @"src/main/java/com/goodow/realtime/CollaborativeList.java:451 condition failed: assert cursor + list.length() <= length();");
  [this$0_ removeAndFireEventWithInt:cursor_ withEMJsonArray:list withNSString:((ComGoodowRealtimeOperationRealtimeOperation *) NIL_CHK(val$operation_)).sessionId withNSString:((ComGoodowRealtimeOperationRealtimeOperation *) NIL_CHK(val$operation_)).userId];
  return nil;
}

- (id<ComGoodowRealtimeOperationListAlgorithmListTarget>)insertWithId:(id<EMJsonArray>)list {
  NSAssert([((id<EMJsonArray>) NIL_CHK(list)) length] > 0, @"src/main/java/com/goodow/realtime/CollaborativeList.java:458 condition failed: assert list.length() > 0;");
  NSAssert(cursor_ <= [this$0_ length], @"src/main/java/com/goodow/realtime/CollaborativeList.java:459 condition failed: assert cursor <= length();");
  [this$0_ insertAndFireEventWithInt:cursor_ withEMJsonArray:list withNSString:((ComGoodowRealtimeOperationRealtimeOperation *) NIL_CHK(val$operation_)).sessionId withNSString:((ComGoodowRealtimeOperationRealtimeOperation *) NIL_CHK(val$operation_)).userId];
  cursor_ += [((id<EMJsonArray>) NIL_CHK(list)) length];
  return nil;
}

- (id<ComGoodowRealtimeOperationListAlgorithmListTarget>)retain__WithInt:(int)length {
  cursor_ += length;
  return nil;
}

- (id)initWithGDRCollaborativeList:(GDRCollaborativeList *)outer$
withComGoodowRealtimeOperationRealtimeOperation:(ComGoodowRealtimeOperationRealtimeOperation *)capture$0 {
  if ((self = [super init])) {
    this$0_ = outer$;
    val$operation_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  GDRCollaborativeList_$1 *typedCopy = (GDRCollaborativeList_$1 *) copy;
  typedCopy.this$0 = this$0_;
  typedCopy.cursor = cursor_;
  typedCopy.val$operation = val$operation_;
}

@end
