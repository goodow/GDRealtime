//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/larry/dev/workspace/realtime/realtime-store/src/main/java/com/goodow/realtime/store/channel/TransformQueue.java
//

#include "J2ObjC_source.h"
#include "com/goodow/realtime/json/Json.h"
#include "com/goodow/realtime/json/JsonArray.h"
#include "com/goodow/realtime/operation/Operation.h"
#include "com/goodow/realtime/operation/Transformer.h"
#include "com/goodow/realtime/operation/util/Pair.h"
#include "com/goodow/realtime/store/channel/TransformQueue.h"

__attribute__((unused)) static void ComGoodowRealtimeStoreChannelTransformQueue_checkAppliedVersionWithDouble_(ComGoodowRealtimeStoreChannelTransformQueue *self, jdouble appliedVersion);

@interface ComGoodowRealtimeStoreChannelTransformQueue () {
 @public
  id<ComGoodowRealtimeOperationTransformer> transformer_;
  jdouble version__;
  jdouble expectedAckedClientOps_;
  id<ComGoodowRealtimeJsonJsonArray> serverOps_;
  id<ComGoodowRealtimeJsonJsonArray> queuedClientOps_;
  id<ComGoodowRealtimeOperationOperation> unackedClientOp__;
}

- (void)checkAppliedVersionWithDouble:(jdouble)appliedVersion;
@end

J2OBJC_FIELD_SETTER(ComGoodowRealtimeStoreChannelTransformQueue, transformer_, id<ComGoodowRealtimeOperationTransformer>)
J2OBJC_FIELD_SETTER(ComGoodowRealtimeStoreChannelTransformQueue, serverOps_, id<ComGoodowRealtimeJsonJsonArray>)
J2OBJC_FIELD_SETTER(ComGoodowRealtimeStoreChannelTransformQueue, queuedClientOps_, id<ComGoodowRealtimeJsonJsonArray>)
J2OBJC_FIELD_SETTER(ComGoodowRealtimeStoreChannelTransformQueue, unackedClientOp__, id)

@interface ComGoodowRealtimeStoreChannelTransformQueue_$1 () {
 @public
  ComGoodowRealtimeStoreChannelTransformQueue *this$0_;
  id<ComGoodowRealtimeJsonJsonArray> val$newServerOps_;
}
@end

J2OBJC_FIELD_SETTER(ComGoodowRealtimeStoreChannelTransformQueue_$1, this$0_, ComGoodowRealtimeStoreChannelTransformQueue *)
J2OBJC_FIELD_SETTER(ComGoodowRealtimeStoreChannelTransformQueue_$1, val$newServerOps_, id<ComGoodowRealtimeJsonJsonArray>)

@implementation ComGoodowRealtimeStoreChannelTransformQueue

- (instancetype)initWithComGoodowRealtimeOperationTransformer:(id<ComGoodowRealtimeOperationTransformer>)transformer {
  if (self = [super init]) {
    version__ = -1;
    expectedAckedClientOps_ = 0;
    serverOps_ = ComGoodowRealtimeJsonJson_createArray();
    queuedClientOps_ = ComGoodowRealtimeJsonJson_createArray();
    self->transformer_ = transformer;
  }
  return self;
}

- (void)ackClientOpWithDouble:(jdouble)appliedAt {
  ComGoodowRealtimeStoreChannelTransformQueue_checkAppliedVersionWithDouble_(self, appliedAt);
  NSAssert(expectedAckedClientOps_ == 0, [JreStrcat("$D$" J2OBJC_COMMA() @"must call expectedAck J2OBJC_COMMA() there are " J2OBJC_COMMA() expectedAckedClientOps_ J2OBJC_COMMA() @" expectedAckedClientOps") description]);
  NSAssert(unackedClientOp__ != nil, [JreStrcat("@$D" J2OBJC_COMMA() self J2OBJC_COMMA() @": unackedClientOp is null; applied @" J2OBJC_COMMA() appliedAt) description]);
  version__++;
  unackedClientOp__ = nil;
}

- (id)ackOpIfVersionMatchesWithDouble:(jdouble)appliedAt {
  if (appliedAt == version__) {
    NSAssert(unackedClientOp__ != nil, @"com/goodow/realtime/store/channel/TransformQueue.java:53 condition failed: assert unackedClientOp != null;");
    id<ComGoodowRealtimeOperationOperation> toRtn = unackedClientOp__;
    unackedClientOp__ = nil;
    expectedAckedClientOps_++;
    version__++;
    return toRtn;
  }
  return nil;
}

- (void)clientOpWithComGoodowRealtimeOperationOperation:(id<ComGoodowRealtimeOperationOperation>)clientOp {
  if ([((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(serverOps_)) length] > 0) {
    id<ComGoodowRealtimeJsonJsonArray> newServerOps = [((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(ComGoodowRealtimeJsonJson_createArray())) pushWithId:clientOp];
    [serverOps_ forEachWithComGoodowRealtimeJsonJsonArray_ListIterator:[[ComGoodowRealtimeStoreChannelTransformQueue_$1 alloc] initWithComGoodowRealtimeStoreChannelTransformQueue:self withComGoodowRealtimeJsonJsonArray:newServerOps]];
    clientOp = [newServerOps removeWithInt:[((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(newServerOps)) length] - 1];
    serverOps_ = newServerOps;
  }
  (void) [((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(queuedClientOps_)) pushWithId:clientOp];
}

- (jboolean)expectedAckWithDouble:(jdouble)appliedAt {
  if (expectedAckedClientOps_ == 0) {
    return NO;
  }
  NSAssert(appliedAt == version__ - expectedAckedClientOps_, [JreStrcat("$D$D$D" J2OBJC_COMMA() @"bad applied @" J2OBJC_COMMA() appliedAt J2OBJC_COMMA() @" J2OBJC_COMMA() current @" J2OBJC_COMMA() version__ J2OBJC_COMMA() @" J2OBJC_COMMA() expected remaining " J2OBJC_COMMA() expectedAckedClientOps_) description]);
  expectedAckedClientOps_--;
  return YES;
}

- (jboolean)hasQueuedClientOps {
  return [((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(queuedClientOps_)) length] > 0;
}

- (jboolean)hasServerOp {
  return [((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(serverOps_)) length] > 0;
}

- (void)init__WithDouble:(jdouble)version_ {
  NSAssert(self->version__ == -1, [JreStrcat("$D$DC" J2OBJC_COMMA() @"Already at a version (" J2OBJC_COMMA() self->version__ J2OBJC_COMMA() @") J2OBJC_COMMA() can't init at " J2OBJC_COMMA() version_ J2OBJC_COMMA() ')') description]);
  NSAssert(version_ >= 0, [JreStrcat("$D" J2OBJC_COMMA() @"Initial version must be >= 0 J2OBJC_COMMA() not " J2OBJC_COMMA() version_) description]);
  self->version__ = version_;
}

- (id)peekServerOp {
  NSAssert([self hasServerOp], @"No server ops");
  return [((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(serverOps_)) getWithInt:0];
}

- (id)pushQueuedOpsToUnacked {
  NSAssert(unackedClientOp__ == nil, [JreStrcat("$@" J2OBJC_COMMA() @"Queue contains unacknowledged operation: " J2OBJC_COMMA() unackedClientOp__) description]);
  unackedClientOp__ = [((id<ComGoodowRealtimeOperationTransformer>) nil_chk(transformer_)) composeWithComGoodowRealtimeJsonJsonArray:queuedClientOps_];
  queuedClientOps_ = ComGoodowRealtimeJsonJson_createArray();
  return [self unackedClientOp];
}

- (id)removeServerOp {
  NSAssert([self hasServerOp], @"No server ops");
  return [((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(serverOps_)) removeWithInt:0];
}

- (void)serverOpWithDouble:(jdouble)appliedVersion
withComGoodowRealtimeOperationOperation:(id<ComGoodowRealtimeOperationOperation>)serverOp {
  ComGoodowRealtimeStoreChannelTransformQueue_checkAppliedVersionWithDouble_(self, appliedVersion);
  NSAssert(expectedAckedClientOps_ == 0, [JreStrcat("$D$D$" J2OBJC_COMMA() @"server op applied @" J2OBJC_COMMA() appliedVersion J2OBJC_COMMA() @" while expecting " J2OBJC_COMMA() expectedAckedClientOps_ J2OBJC_COMMA() @" client ops") description]);
  version__++;
  if (unackedClientOp__ != nil) {
    ComGoodowRealtimeOperationUtilPair *pair = [((id<ComGoodowRealtimeOperationTransformer>) nil_chk(transformer_)) transformWithComGoodowRealtimeOperationOperation:unackedClientOp__ withComGoodowRealtimeOperationOperation:serverOp];
    unackedClientOp__ = ((ComGoodowRealtimeOperationUtilPair *) nil_chk(pair))->first_;
    serverOp = pair->second_;
  }
  if ([((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(queuedClientOps_)) length] > 0) {
    id<ComGoodowRealtimeOperationOperation> composedClientOp = [((id<ComGoodowRealtimeOperationTransformer>) nil_chk(transformer_)) composeWithComGoodowRealtimeJsonJsonArray:queuedClientOps_];
    ComGoodowRealtimeOperationUtilPair *pair = [transformer_ transformWithComGoodowRealtimeOperationOperation:composedClientOp withComGoodowRealtimeOperationOperation:serverOp];
    queuedClientOps_ = [((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(ComGoodowRealtimeJsonJson_createArray())) pushWithId:((ComGoodowRealtimeOperationUtilPair *) nil_chk(pair))->first_];
    serverOp = pair->second_;
  }
  (void) [((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(serverOps_)) pushWithId:serverOp];
}

- (NSString *)description {
  return JreStrcat("$D$@$D$@$@$", @"TQ{ ", version__, @"\n  s:", serverOps_, @"\n  exp: ", expectedAckedClientOps_, @"\n  u:", unackedClientOp__, @"\n  q:", queuedClientOps_, @"\n}");
}

- (id)unackedClientOp {
  return unackedClientOp__;
}

- (jdouble)version__ {
  return version__;
}

- (void)checkAppliedVersionWithDouble:(jdouble)appliedVersion {
  ComGoodowRealtimeStoreChannelTransformQueue_checkAppliedVersionWithDouble_(self, appliedVersion);
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeStoreChannelTransformQueue *)other {
  [super copyAllFieldsTo:other];
  other->transformer_ = transformer_;
  other->version__ = version__;
  other->expectedAckedClientOps_ = expectedAckedClientOps_;
  other->serverOps_ = serverOps_;
  other->queuedClientOps_ = queuedClientOps_;
  other->unackedClientOp__ = unackedClientOp__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComGoodowRealtimeOperationTransformer:", "TransformQueue", NULL, 0x1, NULL },
    { "ackClientOpWithDouble:", "ackClientOp", "V", 0x1, NULL },
    { "ackOpIfVersionMatchesWithDouble:", "ackOpIfVersionMatches", "TO;", 0x1, NULL },
    { "clientOpWithComGoodowRealtimeOperationOperation:", "clientOp", "V", 0x1, NULL },
    { "expectedAckWithDouble:", "expectedAck", "Z", 0x1, NULL },
    { "hasQueuedClientOps", NULL, "Z", 0x1, NULL },
    { "hasServerOp", NULL, "Z", 0x1, NULL },
    { "init__WithDouble:", "init", "V", 0x1, NULL },
    { "peekServerOp", NULL, "TO;", 0x1, NULL },
    { "pushQueuedOpsToUnacked", NULL, "TO;", 0x1, NULL },
    { "removeServerOp", NULL, "TO;", 0x1, NULL },
    { "serverOpWithDouble:withComGoodowRealtimeOperationOperation:", "serverOp", "V", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "unackedClientOp", NULL, "TO;", 0x1, NULL },
    { "version__", "version", "D", 0x1, NULL },
    { "checkAppliedVersionWithDouble:", "checkAppliedVersion", "V", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "transformer_", NULL, 0x12, "Lcom.goodow.realtime.operation.Transformer;", NULL,  },
    { "version__", "version", 0x2, "D", NULL,  },
    { "expectedAckedClientOps_", NULL, 0x2, "D", NULL,  },
    { "serverOps_", NULL, 0x2, "Lcom.goodow.realtime.json.JsonArray;", NULL,  },
    { "queuedClientOps_", NULL, 0x2, "Lcom.goodow.realtime.json.JsonArray;", NULL,  },
    { "unackedClientOp__", "unackedClientOp", 0x2, "TO;", NULL,  },
  };
  static const J2ObjcClassInfo _ComGoodowRealtimeStoreChannelTransformQueue = { 1, "TransformQueue", "com.goodow.realtime.store.channel", NULL, 0x1, 16, methods, 6, fields, 0, NULL};
  return &_ComGoodowRealtimeStoreChannelTransformQueue;
}

@end

void ComGoodowRealtimeStoreChannelTransformQueue_checkAppliedVersionWithDouble_(ComGoodowRealtimeStoreChannelTransformQueue *self, jdouble appliedVersion) {
  NSCAssert(appliedVersion >= 0, [JreStrcat("$D$" J2OBJC_COMMA() @"Applied version " J2OBJC_COMMA() appliedVersion J2OBJC_COMMA() @" must be >= 0") description]);
  NSCAssert(self->version__ == appliedVersion, [JreStrcat("$D$D" J2OBJC_COMMA() @"Version mismatch: @" J2OBJC_COMMA() self->version__ J2OBJC_COMMA() @" J2OBJC_COMMA() applied @" J2OBJC_COMMA() appliedVersion) description]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoodowRealtimeStoreChannelTransformQueue)

@implementation ComGoodowRealtimeStoreChannelTransformQueue_$1

- (void)callWithInt:(jint)index
             withId:(id<ComGoodowRealtimeOperationOperation>)serverOp {
  ComGoodowRealtimeOperationUtilPair *pair = [((id<ComGoodowRealtimeOperationTransformer>) nil_chk(this$0_->transformer_)) transformWithComGoodowRealtimeOperationOperation:(id<ComGoodowRealtimeOperationOperation>) check_protocol_cast([val$newServerOps_ removeWithInt:[((id<ComGoodowRealtimeJsonJsonArray>) nil_chk(val$newServerOps_)) length] - 1], @protocol(ComGoodowRealtimeOperationOperation)) withComGoodowRealtimeOperationOperation:serverOp];
  (void) [((id<ComGoodowRealtimeJsonJsonArray>) nil_chk([val$newServerOps_ pushWithId:((ComGoodowRealtimeOperationUtilPair *) nil_chk(pair))->second_])) pushWithId:pair->first_];
}

- (instancetype)initWithComGoodowRealtimeStoreChannelTransformQueue:(ComGoodowRealtimeStoreChannelTransformQueue *)outer$
                                 withComGoodowRealtimeJsonJsonArray:(id<ComGoodowRealtimeJsonJsonArray>)capture$0 {
  this$0_ = outer$;
  val$newServerOps_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeStoreChannelTransformQueue_$1 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
  other->val$newServerOps_ = val$newServerOps_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithInt:withComGoodowRealtimeOperationOperation:", "call", "V", 0x1, NULL },
    { "initWithComGoodowRealtimeStoreChannelTransformQueue:withComGoodowRealtimeJsonJsonArray:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.store.channel.TransformQueue;", NULL,  },
    { "val$newServerOps_", NULL, 0x1012, "Lcom.goodow.realtime.json.JsonArray;", NULL,  },
  };
  static const J2ObjcClassInfo _ComGoodowRealtimeStoreChannelTransformQueue_$1 = { 1, "$1", "com.goodow.realtime.store.channel", "TransformQueue", 0x8000, 2, methods, 2, fields, 0, NULL};
  return &_ComGoodowRealtimeStoreChannelTransformQueue_$1;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoodowRealtimeStoreChannelTransformQueue_$1)
