//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/larry/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/list/AbstractInsertComponent.java
//

#include "J2ObjC_source.h"
#include "com/goodow/realtime/operation/Operation.h"
#include "com/goodow/realtime/operation/impl/AbstractComponent.h"
#include "com/goodow/realtime/operation/list/AbstractInsertComponent.h"
#include "com/goodow/realtime/operation/list/AbstractListComponent.h"
#include "com/goodow/realtime/operation/list/ListTarget.h"

@implementation ComGoodowRealtimeOperationListAbstractInsertComponent

- (instancetype)initWithNSString:(NSString *)id_
                         withInt:(jint)startIndex
                          withId:(id)values {
  return [super initWithInt:ComGoodowRealtimeOperationListAbstractInsertComponent_TYPE withNSString:id_ withInt:startIndex withId:values withInt:-1];
}

- (void)applyWithId:(id<ComGoodowRealtimeOperationListListTarget>)target {
  [((id<ComGoodowRealtimeOperationListListTarget>) nil_chk(target)) insertWithInt:startIndex_ withId:values_];
}

- (ComGoodowRealtimeOperationListAbstractInsertComponent *)transformWithComGoodowRealtimeOperationOperation:(id<ComGoodowRealtimeOperationOperation>)other
                                                                                                withBoolean:(jboolean)applied {
  NSAssert([other isKindOfClass:[ComGoodowRealtimeOperationListAbstractListComponent class]] && [self isSameIdWithComGoodowRealtimeOperationOperation:other], @"com/goodow/realtime/operation/list/AbstractInsertComponent.java:32 condition failed: assert other instanceof AbstractListComponent && isSameId(other);");
  ComGoodowRealtimeOperationListAbstractListComponent *op = (ComGoodowRealtimeOperationListAbstractListComponent *) check_class_cast(other, [ComGoodowRealtimeOperationListAbstractListComponent class]);
  jint transformedStart = [((ComGoodowRealtimeOperationListAbstractListComponent *) nil_chk(op)) transformIndexReferenceWithInt:startIndex_ withBoolean:!applied withBoolean:NO];
  return transformedStart == startIndex_ ? self : [self createWithInt:transformedStart withId:values_];
}

- (jint)transformIndexReferenceWithInt:(jint)index
                           withBoolean:(jboolean)rigthSide
                           withBoolean:(jboolean)canBeDeleted {
  if (rigthSide ? startIndex_ <= index : startIndex_ < index) {
    return index + length_;
  }
  return index;
}

- (ComGoodowRealtimeOperationListAbstractInsertComponent *)createWithInt:(jint)startIndex
                                                                  withId:(id)values {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:withId:", "AbstractInsertComponent", NULL, 0x4, NULL },
    { "applyWithComGoodowRealtimeOperationListListTarget:", "apply", "V", 0x1, NULL },
    { "transformWithComGoodowRealtimeOperationOperation:withBoolean:", "transform", "Lcom.goodow.realtime.operation.list.AbstractInsertComponent;", 0x1, NULL },
    { "transformIndexReferenceWithInt:withBoolean:withBoolean:", "transformIndexReference", "I", 0x1, NULL },
    { "createWithInt:withId:", "create", "Lcom.goodow.realtime.operation.list.AbstractInsertComponent;", 0x404, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComGoodowRealtimeOperationListAbstractInsertComponent_TYPE },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjcClassInfo _ComGoodowRealtimeOperationListAbstractInsertComponent = { 1, "AbstractInsertComponent", "com.goodow.realtime.operation.list", NULL, 0x401, 5, methods, 1, fields, 1, superclass_type_args};
  return &_ComGoodowRealtimeOperationListAbstractInsertComponent;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoodowRealtimeOperationListAbstractInsertComponent)
