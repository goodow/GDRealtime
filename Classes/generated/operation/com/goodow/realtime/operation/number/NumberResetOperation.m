//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/goodow/realtime/operation/AbstractOperation.h"
#include "com/goodow/realtime/operation/number/NumberAddOperation.h"
#include "com/goodow/realtime/operation/number/NumberResetOperation.h"
#include "com/goodow/realtime/operation/number/NumberTarget.h"
#include "java/lang/Double.h"
#include "java/lang/StringBuilder.h"

@implementation ComGoodowRealtimeOperationNumberNumberResetOperation

+ (int)TYPE {
  return ComGoodowRealtimeOperationNumberNumberResetOperation_TYPE;
}

- (id)initWithNSString:(NSString *)id_
            withDouble:(double)oldNumber
            withDouble:(double)newNumber {
  if (self = [super initWithInt:ComGoodowRealtimeOperationNumberNumberResetOperation_TYPE withNSString:id_]) {
    NSAssert(![JavaLangDouble isNaNWithDouble:newNumber] && oldNumber != newNumber, @"/Users/retechretech/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/number/NumberResetOperation.java:26 condition failed: assert !Double.isNaN(newNumber) && oldNumber != newNumber;");
    self->oldNumber_ = oldNumber;
    self->newNumber_ = newNumber;
  }
  return self;
}

- (void)applyWithId:(id<ComGoodowRealtimeOperationNumberNumberTarget>)target {
  [((id<ComGoodowRealtimeOperationNumberNumberTarget>) nil_chk(target)) resetWithDouble:newNumber_];
}

- (ComGoodowRealtimeOperationNumberNumberResetOperation *)invert {
  NSAssert(![JavaLangDouble isNaNWithDouble:oldNumber_], @"/Users/retechretech/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/number/NumberResetOperation.java:38 condition failed: assert !Double.isNaN(oldNumber);");
  return [[ComGoodowRealtimeOperationNumberNumberResetOperation alloc] initWithNSString:id__ withDouble:newNumber_ withDouble:oldNumber_];
}

- (IOSObjectArray *)transformWithWithComGoodowRealtimeOperationAbstractOperation:(ComGoodowRealtimeOperationAbstractOperation *)operation
                                                                     withBoolean:(BOOL)arrivedAfter {
  NSAssert(([operation isKindOfClass:[ComGoodowRealtimeOperationNumberNumberResetOperation class]] || [operation isKindOfClass:[ComGoodowRealtimeOperationNumberNumberAddOperation class]]) && [self isSameIdWithComGoodowRealtimeOperationAbstractOperation:operation], @"/Users/retechretech/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/number/NumberResetOperation.java:45 condition failed: assert (operation instanceof NumberResetOperation || operation instanceof NumberAddOperation)\n        && isSameId(operation);");
  if (arrivedAfter && [operation isKindOfClass:[ComGoodowRealtimeOperationNumberNumberResetOperation class]]) {
    double transformedOldNumber = ((ComGoodowRealtimeOperationNumberNumberResetOperation *) nil_chk(operation))->newNumber_;
    return transformedOldNumber == newNumber_ ? nil : [self asArrayWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [[ComGoodowRealtimeOperationNumberNumberResetOperation alloc] initWithNSString:id__ withDouble:transformedOldNumber withDouble:newNumber_] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  else {
    return nil;
  }
}

- (void)toStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  (void) [((JavaLangStringBuilder *) nil_chk(sb)) appendWithDouble:newNumber_];
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeOperationNumberNumberResetOperation *)other {
  [super copyAllFieldsTo:other];
  other->newNumber_ = newNumber_;
  other->oldNumber_ = oldNumber_;
}

@end
