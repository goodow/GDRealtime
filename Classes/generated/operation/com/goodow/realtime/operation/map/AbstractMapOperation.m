//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/goodow/realtime/operation/AbstractOperation.h"
#include "com/goodow/realtime/operation/map/AbstractMapOperation.h"
#include "com/goodow/realtime/operation/map/MapTarget.h"
#include "java/lang/StringBuilder.h"

@implementation ComGoodowRealtimeOperationMapAbstractMapOperation

+ (int)TYPE {
  return ComGoodowRealtimeOperationMapAbstractMapOperation_TYPE;
}

- (id)initWithNSString:(NSString *)id_
          withNSString:(NSString *)key
                withId:(id)oldValue
                withId:(id)newValue {
  if (self = [super initWithInt:ComGoodowRealtimeOperationMapAbstractMapOperation_TYPE withNSString:id_]) {
    NSAssert(key != nil, @"Null key");
    NSAssert((oldValue == nil && newValue == nil) || ![self equalsWithId:oldValue withId:newValue], @"/Users/retechretech/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/map/AbstractMapOperation.java:28 condition failed: assert (oldValue == null && newValue == null) || !equals(oldValue, newValue);");
    self->key_ = key;
    self->oldValue_ = oldValue;
    self->newValue_ = newValue;
  }
  return self;
}

- (void)applyWithId:(id<ComGoodowRealtimeOperationMapMapTarget>)target {
  [((id<ComGoodowRealtimeOperationMapMapTarget>) nil_chk(target)) setWithNSString:key_ withId:newValue_];
}

- (IOSObjectArray *)transformWithWithComGoodowRealtimeOperationAbstractOperation:(ComGoodowRealtimeOperationAbstractOperation *)operation
                                                                     withBoolean:(BOOL)arrivedAfter {
  NSAssert([operation isKindOfClass:[ComGoodowRealtimeOperationMapAbstractMapOperation class]] && [self isSameIdWithComGoodowRealtimeOperationAbstractOperation:operation], @"/Users/retechretech/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/map/AbstractMapOperation.java:42 condition failed: assert operation instanceof AbstractMapOperation && isSameId(operation);");
  ComGoodowRealtimeOperationMapAbstractMapOperation *op = (ComGoodowRealtimeOperationMapAbstractMapOperation *) check_class_cast(operation, [ComGoodowRealtimeOperationMapAbstractMapOperation class]);
  if (![((NSString *) nil_chk(key_)) isEqual:((ComGoodowRealtimeOperationMapAbstractMapOperation *) nil_chk(op))->key_]) {
    return [self asArrayWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ self } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  if (!arrivedAfter || [self equalsWithId:newValue_ withId:op->newValue_]) {
    return nil;
  }
  return [self asArrayWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self createWithNSString:id__ withNSString:key_ withId:op->newValue_ withId:newValue_] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

- (ComGoodowRealtimeOperationMapAbstractMapOperation *)createWithNSString:(NSString *)id_
                                                             withNSString:(NSString *)key
                                                                   withId:(id)oldValue
                                                                   withId:(id)newValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)equalsWithId:(id)value0
              withId:(id)value1 {
  return value0 == nil ? value1 == nil : [value0 isEqual:value1];
}

- (void)toStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:'"'])) appendWithNSString:key_])) appendWithChar:'"'];
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeOperationMapAbstractMapOperation *)other {
  [super copyAllFieldsTo:other];
  other->key_ = key_;
  other->newValue_ = newValue_;
  other->oldValue_ = oldValue_;
}

@end
