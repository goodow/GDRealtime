//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "com/goodow/realtime/operation/RealtimeOperation.h"
#include "com/goodow/realtime/operation/Transformer.h"
#include "com/goodow/realtime/operation/TransformerImpl.h"
#include "com/goodow/realtime/operation/undo/UndoManagerFactory.h"
#include "com/goodow/realtime/operation/undo/UndoManagerImpl.h"
#include "com/goodow/realtime/operation/undo/UndoManagerPlus.h"
#include "com/goodow/realtime/operation/util/Pair.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/List.h"

@implementation ComGoodowRealtimeOperationUndoUndoManagerFactory

static id<ComGoodowRealtimeOperationUndoUndoManagerPlus> ComGoodowRealtimeOperationUndoUndoManagerFactory_NOP_IMPL_;
static id<ComGoodowRealtimeOperationUndoUndoManagerImpl_Algorithms> ComGoodowRealtimeOperationUndoUndoManagerFactory_algorithms_;

+ (id<ComGoodowRealtimeOperationUndoUndoManagerPlus>)NOP_IMPL {
  return ComGoodowRealtimeOperationUndoUndoManagerFactory_NOP_IMPL_;
}

+ (id<ComGoodowRealtimeOperationUndoUndoManagerImpl_Algorithms>)algorithms {
  return ComGoodowRealtimeOperationUndoUndoManagerFactory_algorithms_;
}

+ (id<ComGoodowRealtimeOperationUndoUndoManagerPlus>)createUndoManager {
  return [[ComGoodowRealtimeOperationUndoUndoManagerImpl alloc] initWithComGoodowRealtimeOperationUndoUndoManagerImpl_Algorithms:ComGoodowRealtimeOperationUndoUndoManagerFactory_algorithms_];
}

+ (id<ComGoodowRealtimeOperationUndoUndoManagerPlus>)getNoOp {
  return (id<ComGoodowRealtimeOperationUndoUndoManagerPlus>) check_protocol_cast(ComGoodowRealtimeOperationUndoUndoManagerFactory_NOP_IMPL_, @protocol(ComGoodowRealtimeOperationUndoUndoManagerPlus));
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComGoodowRealtimeOperationUndoUndoManagerFactory class]) {
    ComGoodowRealtimeOperationUndoUndoManagerFactory_NOP_IMPL_ = [[ComGoodowRealtimeOperationUndoUndoManagerFactory_$1 alloc] init];
    ComGoodowRealtimeOperationUndoUndoManagerFactory_algorithms_ = [[ComGoodowRealtimeOperationUndoUndoManagerFactory_$2 alloc] init];
  }
}

@end
@implementation ComGoodowRealtimeOperationUndoUndoManagerFactory_$1

- (BOOL)canRedo {
  return NO;
}

- (BOOL)canUndo {
  return NO;
}

- (void)checkpoint {
}

- (void)nonUndoableOpWithId:(id)op {
}

- (id<JavaUtilList>)redo {
  return ((ComGoodowRealtimeOperationUtilPair *) nil_chk([self redoPlus]))->first_;
}

- (ComGoodowRealtimeOperationUtilPair *)redoPlus {
  @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"No Redo For You!"];
}

- (id<JavaUtilList>)undo {
  return ((ComGoodowRealtimeOperationUtilPair *) nil_chk([self undoPlus]))->first_;
}

- (void)undoableOpWithId:(id)op {
}

- (ComGoodowRealtimeOperationUtilPair *)undoPlus {
  @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"No Undo For You!"];
}

- (id)init {
  return [super init];
}

@end
@implementation ComGoodowRealtimeOperationUndoUndoManagerFactory_$2

- (ComGoodowRealtimeOperationRealtimeOperation *)invertWithId:(ComGoodowRealtimeOperationRealtimeOperation *)operation {
  return [((ComGoodowRealtimeOperationRealtimeOperation *) nil_chk(operation)) invert];
}

- (void)transformWithJavaUtilList:(id<JavaUtilList>)results
                           withId:(ComGoodowRealtimeOperationRealtimeOperation *)clientOp
                 withJavaUtilList:(id<JavaUtilList>)serverOps
                          withInt:(int)startIndex {
  [((id<ComGoodowRealtimeOperationTransformer>) nil_chk(transformer_)) transformWithJavaUtilList:results withId:clientOp withJavaUtilList:serverOps withInt:startIndex withBoolean:YES];
}

- (id)init {
  if (self = [super init]) {
    transformer_ = [[ComGoodowRealtimeOperationTransformerImpl alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeOperationUndoUndoManagerFactory_$2 *)other {
  [super copyAllFieldsTo:other];
  other->transformer_ = transformer_;
}

@end
