//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/com/goodow/realtime/operation/basic/NoOp.java
//
//  Created by retechretech on 13-5-25.
//

#import "com/goodow/realtime/operation/Operation.h"
#import "com/goodow/realtime/operation/basic/NoOp.h"
#import "com/goodow/realtime/util/Pair.h"
#import "java/lang/IllegalStateException.h"

@implementation ComGoodowRealtimeOperationBasicNoOp

+ (int)TYPE {
  return ComGoodowRealtimeOperationBasicNoOp_TYPE;
}

+ (ComGoodowRealtimeOperationBasicNoOp *)get {
  return [[[ComGoodowRealtimeOperationBasicNoOp alloc] init] autorelease];
}

- (id)init {
  return [super init];
}

- (void)applyWithId:(id)target {
}

- (id<ComGoodowRealtimeOperationOperation>)composeWithWithComGoodowRealtimeOperationOperation:(id<ComGoodowRealtimeOperationOperation>)op {
  @throw [[[JavaLangIllegalStateException alloc] init] autorelease];
}

- (BOOL)isEqual:(id)obj {
  return [obj isKindOfClass:[ComGoodowRealtimeOperationBasicNoOp class]];
}

- (NSString *)getId {
  return nil;
}

- (int)getType {
  return ComGoodowRealtimeOperationBasicNoOp_TYPE;
}

- (id<ComGoodowRealtimeOperationOperation>)invert {
  return self;
}

- (BOOL)isNoOp {
  return YES;
}

- (void)setIdWithNSString:(NSString *)id_ {
}

- (NSString *)description {
  return nil;
}

- (ComGoodowRealtimeUtilPair *)transformWithWithComGoodowRealtimeOperationOperation:(id<ComGoodowRealtimeOperationOperation>)clientOp {
  @throw [[[JavaLangIllegalStateException alloc] init] autorelease];
}

- (void)dealloc {
  [super dealloc];
}

@end
