//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/goodow/realtime/operation/AbstractOperation.h"
#include "com/goodow/realtime/operation/list/AbstractInsertOperation.h"
#include "com/goodow/realtime/operation/list/AbstractListOperation.h"
#include "com/goodow/realtime/operation/list/ListTarget.h"

@implementation ComGoodowRealtimeOperationListAbstractInsertOperation

+ (int)TYPE {
  return ComGoodowRealtimeOperationListAbstractInsertOperation_TYPE;
}

- (id)initWithNSString:(NSString *)id_
               withInt:(int)startIndex
                withId:(id)values {
  return [super initWithInt:ComGoodowRealtimeOperationListAbstractInsertOperation_TYPE withNSString:id_ withInt:startIndex withId:values withInt:-1];
}

- (void)applyWithId:(id<ComGoodowRealtimeOperationListListTarget>)target {
  [((id<ComGoodowRealtimeOperationListListTarget>) nil_chk(target)) insertWithInt:startIndex_ withId:values_];
}

- (int)transformIndexReferenceWithInt:(int)index
                          withBoolean:(BOOL)rigthSide
                          withBoolean:(BOOL)canBeDeleted {
  if (rigthSide ? startIndex_ <= index : startIndex_ < index) {
    return index + length_;
  }
  return index;
}

- (IOSObjectArray *)transformWithWithComGoodowRealtimeOperationAbstractOperation:(ComGoodowRealtimeOperationAbstractOperation *)operation
                                                                     withBoolean:(BOOL)arrivedAfter {
  NSAssert([operation isKindOfClass:[ComGoodowRealtimeOperationListAbstractListOperation class]] && [self isSameIdWithComGoodowRealtimeOperationAbstractOperation:operation], @"/Users/retechretech/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/list/AbstractInsertOperation.java:41 condition failed: assert operation instanceof AbstractListOperation && isSameId(operation);");
  ComGoodowRealtimeOperationListAbstractListOperation *op = (ComGoodowRealtimeOperationListAbstractListOperation *) check_class_cast(operation, [ComGoodowRealtimeOperationListAbstractListOperation class]);
  int transformedStart = [((ComGoodowRealtimeOperationListAbstractListOperation *) nil_chk(op)) transformIndexReferenceWithInt:startIndex_ withBoolean:arrivedAfter withBoolean:NO];
  return transformedStart == startIndex_ ? [self asArrayWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ self } count:1 type:[IOSClass classWithClass:[NSObject class]]]] : [self asArrayWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self createWithInt:transformedStart withId:values_] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

- (ComGoodowRealtimeOperationListAbstractInsertOperation *)createWithInt:(int)startIndex
                                                                  withId:(id)values {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

@end
