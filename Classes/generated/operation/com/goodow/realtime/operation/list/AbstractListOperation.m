//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "com/goodow/realtime/operation/list/AbstractDeleteOperation.h"
#include "com/goodow/realtime/operation/list/AbstractListOperation.h"
#include "com/goodow/realtime/operation/list/ListHelper.h"
#include "elemental/json/JsonArray.h"
#include "java/lang/StringBuilder.h"

@implementation ComGoodowRealtimeOperationListAbstractListOperation

+ (int)parseStartIndexWithGDRJsonArray:(id<GDRJsonArray>)serialized {
  return (int) [((id<GDRJsonArray>) nil_chk(serialized)) getNumberWithInt:2];
}

- (id)initWithInt:(int)type
     withNSString:(NSString *)id_
          withInt:(int)startIndex
           withId:(id)values
          withInt:(int)length {
  if (self = [super initWithInt:type withNSString:id_]) {
    NSAssert(startIndex >= 0, @"/Users/retechretech/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/list/AbstractListOperation.java:31 condition failed: assert startIndex >= 0;");
    self->startIndex_ = startIndex;
    self->values_ = values;
    NSAssert(values != nil || length > 0, @"/Users/retechretech/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/list/AbstractListOperation.java:34 condition failed: assert values != null || length > 0;");
    self->length_ = length < 0 ? [((id<ComGoodowRealtimeOperationListListHelper>) nil_chk([self getHelper])) lengthWithId:values] : length;
    NSAssert(values == nil || [((id<ComGoodowRealtimeOperationListListHelper>) nil_chk([self getHelper])) lengthWithId:values] == self->length_, @"/Users/retechretech/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/list/AbstractListOperation.java:36 condition failed: assert values == null || getHelper().length(values) == this.length;");
    NSAssert(self->length_ > 0, @"/Users/retechretech/dev/workspace/realtime/realtime-operation/src/main/java/com/goodow/realtime/operation/list/AbstractListOperation.java:37 condition failed: assert this.length > 0;");
  }
  return self;
}

- (int)transformIndexReferenceWithInt:(int)index
                          withBoolean:(BOOL)rigthSide
                          withBoolean:(BOOL)canBeDeleted {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<ComGoodowRealtimeOperationListListHelper>)getHelper {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)toStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithInt:startIndex_])) appendWithChar:','];
  if ([self isKindOfClass:[ComGoodowRealtimeOperationListAbstractDeleteOperation class]]) {
    (void) [sb appendWithInt:length_];
  }
  else {
    (void) [sb appendWithJavaLangCharSequence:[((id<ComGoodowRealtimeOperationListListHelper>) nil_chk([self getHelper])) serializeWithId:values_]];
  }
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeOperationListAbstractListOperation *)other {
  [super copyAllFieldsTo:other];
  other->length_ = length_;
  other->startIndex_ = startIndex_;
  other->values_ = values_;
}

@end
