//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/com/goodow/realtime/operation/list/algorithm/ListOpInverter.java
//
//  Created by retechretech on 13-5-25.
//

#import "com/goodow/realtime/operation/list/algorithm/ListOp.h"
#import "com/goodow/realtime/operation/list/algorithm/ListOpInverter.h"
#import "com/goodow/realtime/operation/list/algorithm/ListTarget.h"

@implementation ComGoodowRealtimeOperationListAlgorithmListOpInverter

- (ComGoodowRealtimeOperationListAlgorithmListOp *)output {
  return output_;
}
- (void)setOutput:(ComGoodowRealtimeOperationListAlgorithmListOp *)output {
  JreOperatorRetainedAssign(&output_, output);
}
@synthesize output = output_;

- (id)initWithComGoodowRealtimeOperationListAlgorithmListOp:(ComGoodowRealtimeOperationListAlgorithmListOp *)op
          withComGoodowRealtimeOperationListAlgorithmListOp:(ComGoodowRealtimeOperationListAlgorithmListOp *)output {
  if ((self = [super init])) {
    self.output = output;
    [((ComGoodowRealtimeOperationListAlgorithmListOp *) NIL_CHK(op)) applyWithId:self];
  }
  return self;
}

- (id<ComGoodowRealtimeOperationListAlgorithmListTarget>)delete__WithId:(id)list {
  [((ComGoodowRealtimeOperationListAlgorithmListOp *) NIL_CHK(output_)) insertWithId:list];
  return self;
}

- (id<ComGoodowRealtimeOperationListAlgorithmListTarget>)insertWithId:(id)list {
  [((ComGoodowRealtimeOperationListAlgorithmListOp *) NIL_CHK(output_)) delete__WithId:list];
  return self;
}

- (id<ComGoodowRealtimeOperationListAlgorithmListTarget>)retain__WithInt:(int)length {
  [((ComGoodowRealtimeOperationListAlgorithmListOp *) NIL_CHK(output_)) retain__WithInt:length];
  return self;
}

- (ComGoodowRealtimeOperationListAlgorithmListOp *)finish {
  return output_;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&output_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComGoodowRealtimeOperationListAlgorithmListOpInverter *typedCopy = (ComGoodowRealtimeOperationListAlgorithmListOpInverter *) copy;
  typedCopy.output = output_;
}

@end
