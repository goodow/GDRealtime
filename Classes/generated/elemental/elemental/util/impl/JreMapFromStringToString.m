//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/elemental/util/impl/JreMapFromStringToString.java
//
//  Created by retechretech on 13-5-25.
//

#import "elemental/util/ArrayOf.h"
#import "elemental/util/ArrayOfString.h"
#import "elemental/util/impl/JreArrayOfString.h"
#import "elemental/util/impl/JreMapFromStringTo.h"
#import "elemental/util/impl/JreMapFromStringToString.h"

@implementation ElementalUtilImplJreMapFromStringToString

- (ElementalUtilImplJreMapFromStringTo *)map {
  return map_;
}
- (void)setMap:(ElementalUtilImplJreMapFromStringTo *)map {
  JreOperatorRetainedAssign(&map_, map);
}
@synthesize map = map_;

- (id)init {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&map_, [[[ElementalUtilImplJreMapFromStringTo alloc] init] autorelease]);
  }
  return self;
}

- (NSString *)getWithNSString:(NSString *)key {
  return ((NSString *) [((ElementalUtilImplJreMapFromStringTo *) NIL_CHK(map_)) getWithNSString:key]);
}

- (BOOL)hasKeyWithNSString:(NSString *)key {
  return [((ElementalUtilImplJreMapFromStringTo *) NIL_CHK(map_)) hasKeyWithNSString:key];
}

- (id<ElementalUtilArrayOfString>)keys {
  return [((ElementalUtilImplJreMapFromStringTo *) NIL_CHK(map_)) keys];
}

- (void)putWithNSString:(NSString *)key
           withNSString:(NSString *)value {
  [((ElementalUtilImplJreMapFromStringTo *) NIL_CHK(map_)) putWithNSString:key withId:value];
}

- (void)removeWithNSString:(NSString *)key {
  [((ElementalUtilImplJreMapFromStringTo *) NIL_CHK(map_)) removeWithNSString:key];
}

- (id<ElementalUtilArrayOfString>)values {
  return [[[ElementalUtilImplJreArrayOfString alloc] initWithElementalUtilArrayOf:((id<ElementalUtilArrayOf>) [((ElementalUtilImplJreMapFromStringTo *) NIL_CHK(map_)) values])] autorelease];
}

- (void)dealloc {
  JreOperatorRetainedAssign(&map_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ElementalUtilImplJreMapFromStringToString *typedCopy = (ElementalUtilImplJreMapFromStringToString *) copy;
  typedCopy.map = map_;
}

@end
