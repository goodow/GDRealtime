//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "elemental/util/ArrayOf.h"
#include "elemental/util/ArrayOfInt.h"
#include "elemental/util/impl/JreArrayOf.h"
#include "elemental/util/impl/JreArrayOfInt.h"
#include "elemental/util/impl/JreMapFromIntTo.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Set.h"

@implementation ElementalUtilImplJreMapFromIntTo

- (id)init {
  if (self = [super init]) {
    map_ = [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (id)initWithJavaUtilHashMap:(JavaUtilHashMap *)map {
  if (self = [super init]) {
    self->map_ = map;
  }
  return self;
}

- (id)getWithInt:(int)key {
  return [((JavaUtilHashMap *) nil_chk(map_)) getWithId:[JavaLangInteger valueOfWithInt:key]];
}

- (BOOL)hasKeyWithInt:(int)key {
  return [((JavaUtilHashMap *) nil_chk(map_)) containsKeyWithId:[JavaLangInteger valueOfWithInt:key]];
}

- (id<ElementalUtilArrayOfInt>)keys {
  return [[ElementalUtilImplJreArrayOfInt alloc] initWithElementalUtilArrayOf:[[ElementalUtilImplJreArrayOf alloc] initWithJavaUtilArrayList:[[JavaUtilArrayList alloc] initWithJavaUtilCollection:[((JavaUtilHashMap *) nil_chk(map_)) keySet]]]];
}

- (void)putWithInt:(int)key
            withId:(id)value {
  (void) [((JavaUtilHashMap *) nil_chk(map_)) putWithId:[JavaLangInteger valueOfWithInt:key] withId:value];
}

- (void)removeWithInt:(int)key {
  (void) [((JavaUtilHashMap *) nil_chk(map_)) removeWithId:[JavaLangInteger valueOfWithInt:key]];
}

- (id<ElementalUtilArrayOf>)values {
  return [[ElementalUtilImplJreArrayOf alloc] initWithJavaUtilArrayList:[[JavaUtilArrayList alloc] initWithJavaUtilCollection:[((JavaUtilHashMap *) nil_chk(map_)) values]]];
}

- (void)copyAllFieldsTo:(ElementalUtilImplJreMapFromIntTo *)other {
  [super copyAllFieldsTo:other];
  other->map_ = map_;
}

@end
