//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "elemental/util/ArrayOf.h"
#include "elemental/util/ArrayOfBoolean.h"
#include "elemental/util/ArrayOfInt.h"
#include "elemental/util/ArrayOfNumber.h"
#include "elemental/util/ArrayOfString.h"
#include "elemental/util/Collections.h"
#include "elemental/util/MapFromIntTo.h"
#include "elemental/util/MapFromIntToString.h"
#include "elemental/util/MapFromStringTo.h"
#include "elemental/util/MapFromStringToBoolean.h"
#include "elemental/util/MapFromStringToInt.h"
#include "elemental/util/MapFromStringToNumber.h"
#include "elemental/util/MapFromStringToString.h"
#include "elemental/util/impl/JreArrayOf.h"
#include "elemental/util/impl/JreArrayOfBoolean.h"
#include "elemental/util/impl/JreArrayOfInt.h"
#include "elemental/util/impl/JreArrayOfNumber.h"
#include "elemental/util/impl/JreArrayOfString.h"
#include "elemental/util/impl/JreMapFromIntTo.h"
#include "elemental/util/impl/JreMapFromIntToString.h"
#include "elemental/util/impl/JreMapFromStringTo.h"
#include "elemental/util/impl/JreMapFromStringToBoolean.h"
#include "elemental/util/impl/JreMapFromStringToInt.h"
#include "elemental/util/impl/JreMapFromStringToNumber.h"
#include "elemental/util/impl/JreMapFromStringToString.h"

@implementation ElementalUtilCollections

+ (id<ElementalUtilArrayOf>)arrayOf {
  return [[ElementalUtilImplJreArrayOf alloc] init];
}

+ (id<ElementalUtilArrayOfBoolean>)arrayOfBoolean {
  return [[ElementalUtilImplJreArrayOfBoolean alloc] init];
}

+ (id<ElementalUtilArrayOfInt>)arrayOfInt {
  return [[ElementalUtilImplJreArrayOfInt alloc] init];
}

+ (id<ElementalUtilArrayOfNumber>)arrayOfNumber {
  return [[ElementalUtilImplJreArrayOfNumber alloc] init];
}

+ (id<ElementalUtilArrayOfString>)arrayOfString {
  return [[ElementalUtilImplJreArrayOfString alloc] init];
}

+ (id<ElementalUtilMapFromIntTo>)mapFromIntTo {
  return [[ElementalUtilImplJreMapFromIntTo alloc] init];
}

+ (id<ElementalUtilMapFromIntToString>)mapFromIntToString {
  return [[ElementalUtilImplJreMapFromIntToString alloc] init];
}

+ (id<ElementalUtilMapFromStringTo>)mapFromStringTo {
  return [[ElementalUtilImplJreMapFromStringTo alloc] init];
}

+ (id<ElementalUtilMapFromStringToBoolean>)mapFromStringToBoolean {
  return [[ElementalUtilImplJreMapFromStringToBoolean alloc] init];
}

+ (id<ElementalUtilMapFromStringToInt>)mapFromStringToInt {
  return [[ElementalUtilImplJreMapFromStringToInt alloc] init];
}

+ (id<ElementalUtilMapFromStringToNumber>)mapFromStringToNumber {
  return [[ElementalUtilImplJreMapFromStringToNumber alloc] init];
}

+ (id<ElementalUtilMapFromStringToString>)mapFromStringToString {
  return [[ElementalUtilImplJreMapFromStringToString alloc] init];
}

- (id)init {
  return [super init];
}

@end
