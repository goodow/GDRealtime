//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "elemental/json/JsonType.h"
#include "java/lang/IllegalArgumentException.h"


static GDRJsonTypeEnum *GDRJsonTypeEnum_OBJECT;
static GDRJsonTypeEnum *GDRJsonTypeEnum_ARRAY;
static GDRJsonTypeEnum *GDRJsonTypeEnum_STRING;
static GDRJsonTypeEnum *GDRJsonTypeEnum_NUMBER;
static GDRJsonTypeEnum *GDRJsonTypeEnum_BOOLEAN;
static GDRJsonTypeEnum *GDRJsonTypeEnum_NULL_;
IOSObjectArray *GDRJsonTypeEnum_values;

@implementation GDRJsonTypeEnum

+ (GDRJsonTypeEnum *)OBJECT {
  return GDRJsonTypeEnum_OBJECT;
}
+ (GDRJsonTypeEnum *)ARRAY {
  return GDRJsonTypeEnum_ARRAY;
}
+ (GDRJsonTypeEnum *)STRING {
  return GDRJsonTypeEnum_STRING;
}
+ (GDRJsonTypeEnum *)NUMBER {
  return GDRJsonTypeEnum_NUMBER;
}
+ (GDRJsonTypeEnum *)BOOLEAN {
  return GDRJsonTypeEnum_BOOLEAN;
}
+ (GDRJsonTypeEnum *)NULL_ {
  return GDRJsonTypeEnum_NULL_;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [GDRJsonTypeEnum class]) {
    GDRJsonTypeEnum_OBJECT = [[GDRJsonTypeEnum alloc] initWithNSString:@"OBJECT" withInt:0];
    GDRJsonTypeEnum_ARRAY = [[GDRJsonTypeEnum alloc] initWithNSString:@"ARRAY" withInt:1];
    GDRJsonTypeEnum_STRING = [[GDRJsonTypeEnum alloc] initWithNSString:@"STRING" withInt:2];
    GDRJsonTypeEnum_NUMBER = [[GDRJsonTypeEnum alloc] initWithNSString:@"NUMBER" withInt:3];
    GDRJsonTypeEnum_BOOLEAN = [[GDRJsonTypeEnum alloc] initWithNSString:@"BOOLEAN" withInt:4];
    GDRJsonTypeEnum_NULL_ = [[GDRJsonTypeEnum alloc] initWithNSString:@"NULL_" withInt:5];
    GDRJsonTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ GDRJsonTypeEnum_OBJECT, GDRJsonTypeEnum_ARRAY, GDRJsonTypeEnum_STRING, GDRJsonTypeEnum_NUMBER, GDRJsonTypeEnum_BOOLEAN, GDRJsonTypeEnum_NULL_, nil } count:6 type:[IOSClass classWithClass:[GDRJsonTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:GDRJsonTypeEnum_values];
}

+ (GDRJsonTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [GDRJsonTypeEnum_values count]; i++) {
    GDRJsonTypeEnum *e = GDRJsonTypeEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
