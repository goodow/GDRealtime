//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/elemental/json/JsonType.java
//
//  Created by retechretech on 13-5-25.
//

#import "elemental/json/JsonType.h"
#import "java/lang/IllegalArgumentException.h"


static EMJsonTypeEnum *EMJsonTypeEnum_OBJECT;
static EMJsonTypeEnum *EMJsonTypeEnum_ARRAY;
static EMJsonTypeEnum *EMJsonTypeEnum_STRING;
static EMJsonTypeEnum *EMJsonTypeEnum_NUMBER;
static EMJsonTypeEnum *EMJsonTypeEnum_BOOLEAN;
static EMJsonTypeEnum *EMJsonTypeEnum_NULL_;
IOSObjectArray *EMJsonTypeEnum_values;

@implementation EMJsonTypeEnum

+ (EMJsonTypeEnum *)OBJECT {
  return EMJsonTypeEnum_OBJECT;
}
+ (EMJsonTypeEnum *)ARRAY {
  return EMJsonTypeEnum_ARRAY;
}
+ (EMJsonTypeEnum *)STRING {
  return EMJsonTypeEnum_STRING;
}
+ (EMJsonTypeEnum *)NUMBER {
  return EMJsonTypeEnum_NUMBER;
}
+ (EMJsonTypeEnum *)BOOLEAN {
  return EMJsonTypeEnum_BOOLEAN;
}
+ (EMJsonTypeEnum *)NULL_ {
  return EMJsonTypeEnum_NULL_;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

+ (void)initialize {
  if (self == [EMJsonTypeEnum class]) {
    EMJsonTypeEnum_OBJECT = [[EMJsonTypeEnum alloc] initWithNSString:@"OBJECT" withInt:0];
    EMJsonTypeEnum_ARRAY = [[EMJsonTypeEnum alloc] initWithNSString:@"ARRAY" withInt:1];
    EMJsonTypeEnum_STRING = [[EMJsonTypeEnum alloc] initWithNSString:@"STRING" withInt:2];
    EMJsonTypeEnum_NUMBER = [[EMJsonTypeEnum alloc] initWithNSString:@"NUMBER" withInt:3];
    EMJsonTypeEnum_BOOLEAN = [[EMJsonTypeEnum alloc] initWithNSString:@"BOOLEAN" withInt:4];
    EMJsonTypeEnum_NULL_ = [[EMJsonTypeEnum alloc] initWithNSString:@"NULL_" withInt:5];
    EMJsonTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ EMJsonTypeEnum_OBJECT, EMJsonTypeEnum_ARRAY, EMJsonTypeEnum_STRING, EMJsonTypeEnum_NUMBER, EMJsonTypeEnum_BOOLEAN, EMJsonTypeEnum_NULL_, nil } count:6 type:[IOSClass classWithClass:[EMJsonTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:EMJsonTypeEnum_values];
}

+ (EMJsonTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [EMJsonTypeEnum_values count]; i++) {
    EMJsonTypeEnum *e = [EMJsonTypeEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

@end
