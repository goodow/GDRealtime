//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "elemental/json/Json.h"
#include "elemental/json/JsonArray.h"
#include "elemental/json/JsonBoolean.h"
#include "elemental/json/JsonFactory.h"
#include "elemental/json/JsonNull.h"
#include "elemental/json/JsonNumber.h"
#include "elemental/json/JsonObject.h"
#include "elemental/json/JsonString.h"
#include "elemental/json/impl/JreJsonFactory.h"

@implementation GDRJson

+ (id<GDRJsonString>)createWithNSString:(NSString *)string {
  return [((id<GDRJsonFactory>) nil_chk([GDRJson instance])) createWithNSString:string];
}

+ (id<GDRJsonBoolean>)createWithBoolean:(BOOL)bool_ {
  return [((id<GDRJsonFactory>) nil_chk([GDRJson instance])) createWithBoolean:bool_];
}

+ (id<GDRJsonArray>)createArray {
  return [((id<GDRJsonFactory>) nil_chk([GDRJson instance])) createArray];
}

+ (id<GDRJsonNull>)createNull {
  return [((id<GDRJsonFactory>) nil_chk([GDRJson instance])) createNull];
}

+ (id<GDRJsonNumber>)createWithDouble:(double)number {
  return [((id<GDRJsonFactory>) nil_chk([GDRJson instance])) createWithDouble:number];
}

+ (id<GDRJsonObject>)createObject {
  return [((id<GDRJsonFactory>) nil_chk([GDRJson instance])) createObject];
}

+ (id<GDRJsonFactory>)instance {
  return [[ElementalJsonImplJreJsonFactory alloc] init];
}

+ (id<GDRJsonObject>)parseWithNSString:(NSString *)jsonString {
  return [((id<GDRJsonFactory>) nil_chk([GDRJson instance])) parseWithNSString:jsonString];
}

- (id)init {
  return [super init];
}

@end
