//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/elemental/json/impl/JreJsonString.java
//
//  Created by retechretech on 13-5-25.
//

#import "elemental/json/JsonType.h"
#import "elemental/json/JsonValue.h"
#import "elemental/json/impl/JreJsonString.h"
#import "elemental/json/impl/JreJsonValue.h"
#import "elemental/json/impl/JsonContext.h"
#import "elemental/json/impl/JsonUtil.h"
#import "elemental/json/impl/JsonVisitor.h"
#import "java/lang/Double.h"
#import "java/lang/NumberFormatException.h"

@implementation ElementalJsonImplJreJsonString

- (NSString *)string {
  return string_;
}
- (void)setString:(NSString *)string {
  JreOperatorRetainedAssign(&string_, string);
}
@synthesize string = string_;

- (id)initWithNSString:(NSString *)string {
  if ((self = [super init])) {
    self.string = string;
  }
  return self;
}

- (BOOL)asBoolean {
  return ![[self getString] isEmpty];
}

- (double)asNumber {
  @try {
    if ([[self asString] isEmpty]) {
      return 0.0;
    }
    else {
      return [JavaLangDouble parseDoubleWithNSString:[self asString]];
    }
  }
  @catch (JavaLangNumberFormatException *nfe) {
    return JavaLangDouble_NaN;
  }
}

- (NSString *)asString {
  return [self getString];
}

- (id)getObject {
  return [self getString];
}

- (NSString *)getString {
  return string_;
}

- (EMJsonTypeEnum *)getType {
  return [EMJsonTypeEnum STRING];
}

- (BOOL)jsEqualsWithEMJsonValue:(id<EMJsonValue>)value {
  return [[self getObject] isEqual:[((ElementalJsonImplJreJsonValue *) value) getObject]];
}

- (void)traverseWithElementalJsonImplJsonVisitor:(ElementalJsonImplJsonVisitor *)visitor
                withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx {
  [((ElementalJsonImplJsonVisitor *) NIL_CHK(visitor)) visitWithNSString:[self getString] withElementalJsonImplJsonContext:ctx];
}

- (NSString *)toJson {
  return [ElementalJsonImplJsonUtil quoteWithNSString:[self getString]];
}

- (void)dealloc {
  JreOperatorRetainedAssign(&string_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ElementalJsonImplJreJsonString *typedCopy = (ElementalJsonImplJreJsonString *) copy;
  typedCopy.string = string_;
}

@end
