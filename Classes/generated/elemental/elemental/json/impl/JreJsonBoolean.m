//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "elemental/json/JsonType.h"
#include "elemental/json/JsonValue.h"
#include "elemental/json/impl/JreJsonBoolean.h"
#include "elemental/json/impl/JreJsonValue.h"
#include "elemental/json/impl/JsonContext.h"
#include "elemental/json/impl/JsonVisitor.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalStateException.h"

@implementation ElementalJsonImplJreJsonBoolean

- (id)initWithBoolean:(BOOL)bool_ {
  if (self = [super init]) {
    self->bool__ = bool_;
  }
  return self;
}

- (BOOL)asBoolean {
  return [self getBoolean];
}

- (double)asNumber {
  return [self getBoolean] ? 1 : 0;
}

- (NSString *)asString {
  return [JavaLangBoolean toStringWithBoolean:[self getBoolean]];
}

- (BOOL)getBoolean {
  return bool__;
}

- (id)getObject {
  return [JavaLangBoolean valueOfWithBoolean:[self getBoolean]];
}

- (GDRJsonTypeEnum *)getType {
  return [GDRJsonTypeEnum BOOLEAN];
}

- (BOOL)jsEqualsWithGDRJsonValue:(id<GDRJsonValue>)value {
  return [nil_chk([self getObject]) isEqual:[((ElementalJsonImplJreJsonValue *) nil_chk(value)) getObject]];
}

- (void)traverseWithElementalJsonImplJsonVisitor:(ElementalJsonImplJsonVisitor *)visitor
                withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx {
  [((ElementalJsonImplJsonVisitor *) nil_chk(visitor)) visitWithBoolean:[self getBoolean] withElementalJsonImplJsonContext:ctx];
}

- (NSString *)toJson {
  return [NSString valueOfBool:bool__];
}

+ (IOSObjectArray *)__exceptions_toJson {
  return [IOSObjectArray arrayWithObjects:(id[]) { [JavaLangIllegalStateException getClass] } count:1 type:[IOSClass getClass]];
}

- (void)copyAllFieldsTo:(ElementalJsonImplJreJsonBoolean *)other {
  [super copyAllFieldsTo:other];
  other->bool__ = bool__;
}

@end
