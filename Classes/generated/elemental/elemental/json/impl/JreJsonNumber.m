//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "elemental/json/JsonType.h"
#include "elemental/json/JsonValue.h"
#include "elemental/json/impl/JreJsonNumber.h"
#include "elemental/json/impl/JreJsonValue.h"
#include "elemental/json/impl/JsonContext.h"
#include "elemental/json/impl/JsonVisitor.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"

@implementation ElementalJsonImplJreJsonNumber

- (id)initWithDouble:(double)number {
  if (self = [super init]) {
    self->number_ = number;
  }
  return self;
}

- (BOOL)asBoolean {
  return [JavaLangDouble isNaNWithDouble:[self getNumber]] || [JavaLangMath absWithDouble:[self getNumber]] == 0.0 ? NO : YES;
}

- (double)asNumber {
  return [self getNumber];
}

- (NSString *)asString {
  return [self toJson];
}

- (double)getNumber {
  return number_;
}

- (id)getObject {
  return [JavaLangDouble valueOfWithDouble:[self getNumber]];
}

- (GDRJsonTypeEnum *)getType {
  return [GDRJsonTypeEnum NUMBER];
}

- (BOOL)jsEqualsWithGDRJsonValue:(id<GDRJsonValue>)value {
  return [nil_chk([self getObject]) isEqual:[((ElementalJsonImplJreJsonValue *) nil_chk(value)) getObject]];
}

- (void)traverseWithElementalJsonImplJsonVisitor:(ElementalJsonImplJsonVisitor *)visitor
                withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx {
  [((ElementalJsonImplJsonVisitor *) nil_chk(visitor)) visitWithDouble:[self getNumber] withElementalJsonImplJsonContext:ctx];
}

- (NSString *)toJson {
  NSString *toReturn = [NSString valueOfDouble:number_];
  if ([((NSString *) nil_chk(toReturn)) hasSuffix:@".0"]) {
    toReturn = [toReturn substring:0 endIndex:[toReturn length] - 2];
  }
  return toReturn;
}

- (void)copyAllFieldsTo:(ElementalJsonImplJreJsonNumber *)other {
  [super copyAllFieldsTo:other];
  other->number_ = number_;
}

@end
