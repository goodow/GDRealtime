//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/elemental/json/impl/JreJsonNumber.java
//
//  Created by retechretech on 13-5-25.
//

#import "elemental/json/JsonType.h"
#import "elemental/json/JsonValue.h"
#import "elemental/json/impl/JreJsonNumber.h"
#import "elemental/json/impl/JreJsonValue.h"
#import "elemental/json/impl/JsonContext.h"
#import "elemental/json/impl/JsonVisitor.h"
#import "java/lang/Double.h"
#import "java/lang/Math.h"

@implementation ElementalJsonImplJreJsonNumber

@synthesize number = number_;

- (id)initWithDouble:(double)number {
  if ((self = [super init])) {
    self.number = number;
  }
  return self;
}

- (BOOL)asBoolean {
  return [JavaLangDouble isNaNWithDouble:[self getNumber]] || [JavaLangMath absWithDouble:[self getNumber]] == 0.0 ? NO : YES;
}

- (double)asNumber {
  return [self getNumber];
}

- (NSString *)asString {
  return [self toJson];
}

- (double)getNumber {
  return number_;
}

- (id)getObject {
  return [JavaLangDouble valueOfWithDouble:[self getNumber]];
}

- (EMJsonTypeEnum *)getType {
  return [EMJsonTypeEnum NUMBER];
}

- (BOOL)jsEqualsWithEMJsonValue:(id<EMJsonValue>)value {
  return [[self getObject] isEqual:[((ElementalJsonImplJreJsonValue *) value) getObject]];
}

- (void)traverseWithElementalJsonImplJsonVisitor:(ElementalJsonImplJsonVisitor *)visitor
                withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx {
  [((ElementalJsonImplJsonVisitor *) NIL_CHK(visitor)) visitWithDouble:[self getNumber] withElementalJsonImplJsonContext:ctx];
}

- (NSString *)toJson {
  NSString *toReturn = [NSString valueOfDouble:number_];
  if ([NIL_CHK(toReturn) hasSuffix:@".0"]) {
    toReturn = [NIL_CHK(toReturn) substring:0 endIndex:[NIL_CHK(toReturn) length] - 2];
  }
  return toReturn;
}

- (void)dealloc {
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ElementalJsonImplJreJsonNumber *typedCopy = (ElementalJsonImplJreJsonNumber *) copy;
  typedCopy.number = number_;
}

@end
