//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/elemental/json/impl/JsonUtil.java
//
//  Created by retechretech on 13-5-25.
//

@class ElementalJsonImplJsonContext;
@class JavaLangStringBuffer;
@protocol EMJsonArray;
@protocol EMJsonObject;
@protocol EMJsonValue;
@protocol JavaUtilSet;

#import "JreEmulation.h"
#import "elemental/json/impl/JsonVisitor.h"

@interface ElementalJsonImplJsonUtil : NSObject {
}

+ (NSString *)escapeControlCharsWithNSString:(NSString *)text;
+ (id)parseWithNSString:(NSString *)json;
+ (NSString *)quoteWithNSString:(NSString *)value;
+ (NSString *)stringifyWithEMJsonValue:(id<EMJsonValue>)jsonValue;
+ (NSString *)stringifyWithEMJsonValue:(id<EMJsonValue>)jsonValue
                               withInt:(int)spaces;
+ (NSString *)stringifyWithEMJsonValue:(id<EMJsonValue>)jsonValue
                          withNSString:(NSString *)indent;
+ (NSString *)escapeStringAsUnicodeWithNSString:(NSString *)match;
+ (BOOL)isControlCharWithUnichar:(unichar)c;
- (id)init;
@end

@protocol ElementalJsonImplJsonUtil_RegExpReplacer < NSObject >
- (NSString *)replaceWithNSString:(NSString *)match;
@end

@interface ElementalJsonImplJsonUtil_StringifyJsonVisitor : ElementalJsonImplJsonVisitor {
 @public
  NSString *indentLevel_;
  id<JavaUtilSet> visited_;
  NSString *indent_;
  JavaLangStringBuffer *sb_;
  BOOL pretty_;
}

@property (nonatomic, copy) NSString *indentLevel;
@property (nonatomic, retain) id<JavaUtilSet> visited;
@property (nonatomic, copy) NSString *indent;
@property (nonatomic, retain) JavaLangStringBuffer *sb;
@property (nonatomic, assign) BOOL pretty;

+ (id<JavaUtilSet>)skipKeys;
- (id)initWithNSString:(NSString *)indent
withJavaLangStringBuffer:(JavaLangStringBuffer *)sb
              withBOOL:(BOOL)pretty;
- (void)endVisitWithEMJsonArray:(id<EMJsonArray>)array
withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (void)endVisitWithEMJsonObject:(id<EMJsonObject>)object
withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (void)visitWithDouble:(double)number
withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (void)visitWithNSString:(NSString *)string
withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (void)visitWithBOOL:(BOOL)bool_
withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (BOOL)visitWithEMJsonArray:(id<EMJsonArray>)array
withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (BOOL)visitWithEMJsonObject:(id<EMJsonObject>)object
withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (BOOL)visitIndexWithInt:(int)index
withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (BOOL)visitKeyWithNSString:(NSString *)key
withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (void)visitNullWithElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (void)checkCycleWithEMJsonValue:(id<EMJsonValue>)value;
- (void)commaIfNotFirstWithElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx;
- (NSString *)formatWithDouble:(double)number;
@end
