//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/elemental/json/impl/JreJsonNull.java
//
//  Created by retechretech on 13-5-25.
//

#import "elemental/json/JsonNull.h"
#import "elemental/json/JsonType.h"
#import "elemental/json/JsonValue.h"
#import "elemental/json/impl/JreJsonNull.h"
#import "elemental/json/impl/JsonContext.h"
#import "elemental/json/impl/JsonVisitor.h"

@implementation ElementalJsonImplJreJsonNull

static id<EMJsonNull> ElementalJsonImplJreJsonNull_NULL_INSTANCE_;

+ (id<EMJsonNull>)NULL_INSTANCE {
  return ElementalJsonImplJreJsonNull_NULL_INSTANCE_;
}

- (double)asNumber {
  return 0;
}

- (BOOL)asBoolean {
  return NO;
}

- (NSString *)asString {
  return @"null";
}

- (id)getObject {
  return nil;
}

- (EMJsonTypeEnum *)getType {
  return [EMJsonTypeEnum NULL_];
}

- (BOOL)jsEqualsWithEMJsonValue:(id<EMJsonValue>)value {
  return value == nil || [((id<EMJsonValue>) NIL_CHK(value)) getType] == [EMJsonTypeEnum NULL_];
}

- (void)traverseWithElementalJsonImplJsonVisitor:(ElementalJsonImplJsonVisitor *)visitor
                withElementalJsonImplJsonContext:(ElementalJsonImplJsonContext *)ctx {
  [((ElementalJsonImplJsonVisitor *) NIL_CHK(visitor)) visitNullWithElementalJsonImplJsonContext:ctx];
}

- (NSString *)toJson {
  return [self asString];
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ElementalJsonImplJreJsonNull class]) {
    JreOperatorRetainedAssign(&ElementalJsonImplJreJsonNull_NULL_INSTANCE_, [[[ElementalJsonImplJreJsonNull alloc] init] autorelease]);
  }
}

- (void)dealloc {
  [super dealloc];
}

@end
